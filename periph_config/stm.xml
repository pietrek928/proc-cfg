<proc _="proc_cfg"><periph_data _="dict"><TIM2 _="periph_obj" a="0x40000000" t="TIM" /><TIM3 _="periph_obj" a="0x40000400" t="TIM" /><TIM4 _="periph_obj" a="0x40000800" t="TIM" /><TIM6 _="periph_obj" a="0x40001000" t="TIM" /><TIM7 _="periph_obj" a="0x40001400" t="TIM" /><RTC _="periph_obj" a="0x40002800" t="RTC" /><WWDG _="periph_obj" a="0x40002c00" t="WWDG" /><IWDG _="periph_obj" a="0x40003000" t="IWDG" /><SPI2 _="periph_obj" a="0x40003800" t="SPI" /><USART2 _="periph_obj" a="0x40004400" t="USART" /><USART3 _="periph_obj" a="0x40004800" t="USART" /><I2C1 _="periph_obj" a="0x40005400" t="I2C" /><I2C2 _="periph_obj" a="0x40005800" t="I2C" /><BKP _="periph_obj" a="0x40006c00" t="BKP" /><PWR _="periph_obj" a="0x40007000" t="PWR" /><DAC _="periph_obj" a="0x40007400" t="DAC" /><CEC _="periph_obj" a="0x40007800" t="CEC" /><AFIO _="periph_obj" a="0x40010000" t="AFIO" /><EXTI _="periph_obj" a="0x40010400" t="EXTI" /><GPIOA _="periph_obj" a="0x40010800" t="GPIO" /><GPIOB _="periph_obj" a="0x40010c00" t="GPIO" /><GPIOC _="periph_obj" a="0x40011000" t="GPIO" /><GPIOD _="periph_obj" a="0x40011400" t="GPIO" /><GPIOE _="periph_obj" a="0x40011800" t="GPIO" /><ADC1 _="periph_obj" a="0x40012400" t="ADC" /><TIM1 _="periph_obj" a="0x40012c00" t="TIM" /><SPI1 _="periph_obj" a="0x40013000" t="SPI" /><USART1 _="periph_obj" a="0x40013800" t="USART" /><TIM15 _="periph_obj" a="0x40014000" t="TIM" /><TIM16 _="periph_obj" a="0x40014400" t="TIM" /><TIM17 _="periph_obj" a="0x40014800" t="TIM" /><SDIO _="periph_obj" a="0x40018000" t="SDIO" /><DMA1 _="periph_obj" a="0x40020000" t="DMA" /><DMA1_Channel1 _="periph_obj" a="0x40020008" t="DMA_Channel" /><DMA1_Channel2 _="periph_obj" a="0x4002001c" t="DMA_Channel" /><DMA1_Channel3 _="periph_obj" a="0x40020030" t="DMA_Channel" /><DMA1_Channel4 _="periph_obj" a="0x40020044" t="DMA_Channel" /><DMA1_Channel5 _="periph_obj" a="0x40020058" t="DMA_Channel" /><DMA1_Channel6 _="periph_obj" a="0x4002006c" t="DMA_Channel" /><DMA1_Channel7 _="periph_obj" a="0x40020080" t="DMA_Channel" /><RCC _="periph_obj" a="0x40021000" t="RCC" /><CRC _="periph_obj" a="0x40023000" t="CRC" /><FLASH _="periph_obj" a="0x40022000" t="FLASH" /><OB _="periph_obj" a="0x1ffff800" t="OB" /><DBGMCU _="periph_obj" a="0xe0042000" t="DBGMCU" /></periph_data><types _="nd"><ADC _="struct_descr" rn="ADC_TypeDef"><t _="nl"><SR _="struct_field" doc="" l="4"><v _="nl"><AWD _="reg_bit" b="0" doc="Analog watchdog flag" /><EOC _="reg_bit" b="1" doc="End of conversion" /><JEOC _="reg_bit" b="2" doc="Injected channel end of conversion" /><JSTRT _="reg_bit" b="3" doc="Injected channel Start flag" /><STRT _="reg_bit" b="4" doc="Regular channel Start flag" /></v></SR><CR _="struct_field" doc="" l="4" ne="2"><v _="nl"><AWDCH _="reg_bit" b="0" doc="AWDCH[4:0] bits (Analog watchdog channel select bits)" e="4" /><EOCIE _="reg_bit" b="5" doc="Interrupt enable for EOC" /><AWDIE _="reg_bit" b="6" doc="Analog Watchdog interrupt enable" /><JEOCIE _="reg_bit" b="7" doc="Interrupt enable for injected channels" /><SCAN _="reg_bit" b="8" doc="Scan mode" /><AWDSGL _="reg_bit" b="9" doc="Enable the watchdog on a single channel in scan mode" /><JAUTO _="reg_bit" b="10" doc="Automatic injected group conversion" /><DISCEN _="reg_bit" b="11" doc="Discontinuous mode on regular channels" /><JDISCEN _="reg_bit" b="12" doc="Discontinuous mode on injected channels" /><DISCNUM _="reg_bit" b="13" doc="DISCNUM[2:0] bits (Discontinuous mode channel count)" e="15" /><JAWDEN _="reg_bit" b="22" doc="Analog watchdog enable on injected channels" /><AWDEN _="reg_bit" b="23" doc="Analog watchdog enable on regular channels" /><ADON _="reg_bit" b="32" doc="A/D Converter ON / OFF" /><CONT _="reg_bit" b="33" doc="Continuous Conversion" /><CAL _="reg_bit" b="34" doc="A/D Calibration" /><RSTCAL _="reg_bit" b="35" doc="Reset Calibration" /><DMA _="reg_bit" b="40" doc="Direct Memory access mode" /><ALIGN _="reg_bit" b="43" doc="Data Alignment" /><JEXTTRIG _="reg_bit" b="47" doc="External Trigger Conversion mode for injected channels" /><EXTTRIG _="reg_bit" b="52" doc="External Trigger Conversion mode for regular channels" /><JSWSTART _="reg_bit" b="53" doc="Start Conversion of injected channels" /><SWSTART _="reg_bit" b="54" doc="Start Conversion of regular channels" /><TSVREFE _="reg_bit" b="55" doc="Temperature Sensor and VREFINT Enable" /><JEXTSEL _="reg_bit" b="76" doc="JEXTSEL[2:0] bits (External event select for injected group)" e="14" /><EXTSEL _="reg_bit" b="81" doc="EXTSEL[2:0] bits (External Event Select for regular group)" e="19" /></v></CR><SMPR1 _="struct_field" doc="" l="4"><v _="nl"><SMP10 _="reg_bit" b="0" doc="SMP10[2:0] bits (Channel 10 Sample time selection)" e="2" /><SMP11 _="reg_bit" b="3" doc="SMP11[2:0] bits (Channel 11 Sample time selection)" e="5" /><SMP12 _="reg_bit" b="6" doc="SMP12[2:0] bits (Channel 12 Sample time selection)" e="8" /><SMP13 _="reg_bit" b="9" doc="SMP13[2:0] bits (Channel 13 Sample time selection)" e="11" /><SMP14 _="reg_bit" b="12" doc="SMP14[2:0] bits (Channel 14 Sample time selection)" e="14" /><SMP15 _="reg_bit" b="15" doc="SMP15[2:0] bits (Channel 15 Sample time selection)" e="17" /><SMP16 _="reg_bit" b="18" doc="SMP16[2:0] bits (Channel 16 Sample time selection)" e="20" /><SMP17 _="reg_bit" b="21" doc="SMP17[2:0] bits (Channel 17 Sample time selection)" e="23" /></v></SMPR1><SMPR2 _="struct_field" doc="" l="4"><v _="nl"><SMP0 _="reg_bit" b="0" doc="SMP0[2:0] bits (Channel 0 Sample time selection)" e="2" /><SMP1 _="reg_bit" b="3" doc="SMP1[2:0] bits (Channel 1 Sample time selection)" e="5" /><SMP2 _="reg_bit" b="6" doc="SMP2[2:0] bits (Channel 2 Sample time selection)" e="8" /><SMP3 _="reg_bit" b="9" doc="SMP3[2:0] bits (Channel 3 Sample time selection)" e="11" /><SMP4 _="reg_bit" b="12" doc="SMP4[2:0] bits (Channel 4 Sample time selection)" e="14" /><SMP5 _="reg_bit" b="15" doc="SMP5[2:0] bits (Channel 5 Sample time selection)" e="17" /><SMP6 _="reg_bit" b="18" doc="SMP6[2:0] bits (Channel 6 Sample time selection)" e="20" /><SMP7 _="reg_bit" b="21" doc="SMP7[2:0] bits (Channel 7 Sample time selection)" e="23" /><SMP8 _="reg_bit" b="24" doc="SMP8[2:0] bits (Channel 8 Sample time selection)" e="26" /><SMP9 _="reg_bit" b="27" doc="SMP9[2:0] bits (Channel 9 Sample time selection)" e="29" /></v></SMPR2><JOFR _="struct_field" doc="" l="4" ne="4"><v _="nl"><JOFFSET1 _="reg_bit" b="0" doc="Data offset for injected channel 1" e="11" /><JOFFSET2 _="reg_bit" b="64" doc="Data offset for injected channel 2" e="11" /><JOFFSET3 _="reg_bit" b="128" doc="Data offset for injected channel 3" e="11" /><JOFFSET4 _="reg_bit" b="192" doc="Data offset for injected channel 4" e="11" /></v></JOFR><HTR _="struct_field" doc="" l="4"><v _="nl"><HT _="reg_bit" b="0" doc="Analog watchdog high threshold" e="11" /></v></HTR><LTR _="struct_field" doc="" l="4"><v _="nl"><LT _="reg_bit" b="0" doc="Analog watchdog low threshold" e="11" /></v></LTR><SQR _="struct_field" doc="" l="4" ne="3"><v _="nl"><SQ13 _="reg_bit" b="0" doc="SQ13[4:0] bits (13th conversion in regular sequence)" e="4" /><SQ14 _="reg_bit" b="5" doc="SQ14[4:0] bits (14th conversion in regular sequence)" e="9" /><SQ15 _="reg_bit" b="10" doc="SQ15[4:0] bits (15th conversion in regular sequence)" e="14" /><SQ16 _="reg_bit" b="15" doc="SQ16[4:0] bits (16th conversion in regular sequence)" e="19" /><L _="reg_bit" b="20" doc="L[3:0] bits (Regular channel sequence length)" e="23" /><SQ7 _="reg_bit" b="64" doc="SQ7[4:0] bits (7th conversion in regular sequence)" e="4" /><SQ8 _="reg_bit" b="69" doc="SQ8[4:0] bits (8th conversion in regular sequence)" e="9" /><SQ9 _="reg_bit" b="74" doc="SQ9[4:0] bits (9th conversion in regular sequence)" e="14" /><SQ10 _="reg_bit" b="79" doc="SQ10[4:0] bits (10th conversion in regular sequence)" e="19" /><SQ11 _="reg_bit" b="84" doc="SQ11[4:0] bits (11th conversion in regular sequence)" e="24" /><SQ12 _="reg_bit" b="89" doc="SQ12[4:0] bits (12th conversion in regular sequence)" e="29" /><SQ1 _="reg_bit" b="128" doc="SQ1[4:0] bits (1st conversion in regular sequence)" e="4" /><SQ2 _="reg_bit" b="133" doc="SQ2[4:0] bits (2nd conversion in regular sequence)" e="9" /><SQ3 _="reg_bit" b="138" doc="SQ3[4:0] bits (3rd conversion in regular sequence)" e="14" /><SQ4 _="reg_bit" b="143" doc="SQ4[4:0] bits (4th conversion in regular sequence)" e="19" /><SQ5 _="reg_bit" b="148" doc="SQ5[4:0] bits (5th conversion in regular sequence)" e="24" /><SQ6 _="reg_bit" b="153" doc="SQ6[4:0] bits (6th conversion in regular sequence)" e="29" /></v></SQR><JSQR _="struct_field" doc="" l="4"><v _="nl"><JSQ1 _="reg_bit" b="0" doc="JSQ1[4:0] bits (1st conversion in injected sequence)" e="4" /><JSQ2 _="reg_bit" b="5" doc="JSQ2[4:0] bits (2nd conversion in injected sequence)" e="9" /><JSQ3 _="reg_bit" b="10" doc="JSQ3[4:0] bits (3rd conversion in injected sequence)" e="14" /><JSQ4 _="reg_bit" b="15" doc="JSQ4[4:0] bits (4th conversion in injected sequence)" e="19" /><JL _="reg_bit" b="20" doc="JL[1:0] bits (Injected Sequence length)" e="21" /></v></JSQR><JDR1 _="struct_field" doc="" l="4"><v _="nl"><JDATA _="reg_bit" b="0" doc="Injected data" e="15" /></v></JDR1><JDR2 _="struct_field" doc="" l="4"><v _="nl"><JDATA _="reg_bit" b="0" doc="Injected data" e="15" /></v></JDR2><JDR3 _="struct_field" doc="" l="4"><v _="nl"><JDATA _="reg_bit" b="0" doc="Injected data" e="15" /></v></JDR3><JDR4 _="struct_field" doc="" l="4"><v _="nl"><JDATA _="reg_bit" b="0" doc="Injected data" e="15" /></v></JDR4><DR _="struct_field" doc="" l="4"><v _="nl"><DATA _="reg_bit" b="0" doc="Regular data" e="15" /></v></DR></t></ADC><BKP _="struct_descr" rn="BKP_TypeDef"><t _="nl"><RESERVED0 _="struct_field" doc="" l="4"><v _="nl" /></RESERVED0><DR1 _="struct_field" doc="" l="4"><v _="nl"><D _="reg_bit" b="0" doc="Backup data" e="15" /></v></DR1><DR2 _="struct_field" doc="" l="4"><v _="nl"><D _="reg_bit" b="0" doc="Backup data" e="15" /></v></DR2><DR3 _="struct_field" doc="" l="4"><v _="nl"><D _="reg_bit" b="0" doc="Backup data" e="15" /></v></DR3><DR4 _="struct_field" doc="" l="4"><v _="nl"><D _="reg_bit" b="0" doc="Backup data" e="15" /></v></DR4><DR5 _="struct_field" doc="" l="4"><v _="nl"><D _="reg_bit" b="0" doc="Backup data" e="15" /></v></DR5><DR6 _="struct_field" doc="" l="4"><v _="nl"><D _="reg_bit" b="0" doc="Backup data" e="15" /></v></DR6><DR7 _="struct_field" doc="" l="4"><v _="nl"><D _="reg_bit" b="0" doc="Backup data" e="15" /></v></DR7><DR8 _="struct_field" doc="" l="4"><v _="nl"><D _="reg_bit" b="0" doc="Backup data" e="15" /></v></DR8><DR9 _="struct_field" doc="" l="4"><v _="nl"><D _="reg_bit" b="0" doc="Backup data" e="15" /></v></DR9><DR10 _="struct_field" doc="" l="4"><v _="nl"><D _="reg_bit" b="0" doc="Backup data" e="15" /></v></DR10><RTCCR _="struct_field" doc="" l="4"><v _="nl"><CAL _="reg_bit" b="0" doc="Calibration value" e="6" /><CCO _="reg_bit" b="7" doc="Calibration Clock Output" /><ASOE _="reg_bit" b="8" doc="Alarm or Second Output Enable" /><ASOS _="reg_bit" b="9" doc="Alarm or Second Output Selection" /></v></RTCCR><CR _="struct_field" doc="" l="4"><v _="nl"><TPE _="reg_bit" b="0" doc="TAMPER pin enable" /><TPAL _="reg_bit" b="1" doc="TAMPER pin active level" /></v></CR><CSR _="struct_field" doc="" l="4"><v _="nl"><CTE _="reg_bit" b="0" doc="Clear Tamper event" /><CTI _="reg_bit" b="1" doc="Clear Tamper Interrupt" /><TPIE _="reg_bit" b="2" doc="TAMPER Pin interrupt enable" /><TEF _="reg_bit" b="8" doc="Tamper Event Flag" /><TIF _="reg_bit" b="9" doc="Tamper Interrupt Flag" /></v></CSR></t></BKP><CEC _="struct_descr" rn="CEC_TypeDef"><t _="nl"><CFGR _="struct_field" doc="" l="4"><v _="nl"><PE _="reg_bit" b="0" doc="Peripheral Enable" /><IE _="reg_bit" b="1" doc="Interrupt Enable" /><BTEM _="reg_bit" b="2" doc="Bit Timing Error Mode" /><BPEM _="reg_bit" b="3" doc="Bit Period Error Mode" /></v></CFGR><OAR _="struct_field" doc="" l="4"><v _="nl"><OA _="reg_bit" b="0" doc="OA[3:0]: Own Address" e="3" /></v></OAR><PRES _="struct_field" doc="" l="4"><v _="nl"><PRES _="reg_bit" b="0" doc="Prescaler Counter Value" e="13" /></v></PRES><ESR _="struct_field" doc="" l="4"><v _="nl"><BTE _="reg_bit" b="0" doc="Bit Timing Error" /><BPE _="reg_bit" b="1" doc="Bit Period Error" /><RBTFE _="reg_bit" b="2" doc="Rx Block Transfer Finished Error" /><SBE _="reg_bit" b="3" doc="Start Bit Error" /><ACKE _="reg_bit" b="4" doc="Block Acknowledge Error" /><LINE _="reg_bit" b="5" doc="Line Error" /><TBTFE _="reg_bit" b="6" doc="Tx Block Transfer Finished Error" /></v></ESR><CSR _="struct_field" doc="" l="4"><v _="nl"><TSOM _="reg_bit" b="0" doc="Tx Start Of Message" /><TEOM _="reg_bit" b="1" doc="Tx End Of Message" /><TERR _="reg_bit" b="2" doc="Tx Error" /><TBTRF _="reg_bit" b="3" doc="Tx Byte Transfer Request or Block Transfer Finished" /><RSOM _="reg_bit" b="4" doc="Rx Start Of Message" /><REOM _="reg_bit" b="5" doc="Rx End Of Message" /><RERR _="reg_bit" b="6" doc="Rx Error" /><RBTF _="reg_bit" b="7" doc="Rx Block Transfer Finished" /></v></CSR><TXD _="struct_field" doc="" l="4"><v _="nl"><TXD _="reg_bit" b="0" doc="Tx Data register" e="7" /></v></TXD><RXD _="struct_field" doc="" l="4"><v _="nl"><RXD _="reg_bit" b="0" doc="Rx Data register" e="7" /></v></RXD></t></CEC><CRC _="struct_descr" rn="CRC_TypeDef"><t _="nl"><DR _="struct_field" doc="CRC Data register,  Address offset: 0x00" l="4"><v _="nl"><DR _="reg_bit" b="0" doc="Data register bits" e="31" /></v></DR><IDR _="struct_field" doc="CRC Independent data register,  Address offset: 0x04" l="4"><v _="nl"><IDR _="reg_bit" b="0" doc="General-purpose 8-bit data register bits" e="7" /></v></IDR><CR _="struct_field" doc="CRC Control register, Address offset: 0x08" l="4"><v _="nl"><RESET _="reg_bit" b="0" doc="RESET bit" /></v></CR></t></CRC><DAC _="struct_descr" rn="DAC_TypeDef"><t _="nl"><CR _="struct_field" doc="" l="4"><v _="nl"><EN1 _="reg_bit" b="0" doc="DAC channel1 enable" /><BOFF1 _="reg_bit" b="1" doc="DAC channel1 output buffer disable" /><TEN1 _="reg_bit" b="2" doc="DAC channel1 Trigger enable" /><TSEL1 _="reg_bit" b="3" doc="TSEL1[2:0] (DAC channel1 Trigger selection)" e="5" /><WAVE1 _="reg_bit" b="6" doc="WAVE1[1:0] (DAC channel1 noise/triangle wave generation enable)" e="7" /><MAMP1 _="reg_bit" b="8" doc="MAMP1[3:0] (DAC channel1 Mask/Amplitude selector)" e="11" /><DMAEN1 _="reg_bit" b="12" doc="DAC channel1 DMA enable" /><DMAUDRIE1 _="reg_bit" b="13" doc="DAC channel1 DMA underrun interrupt enable" /><EN2 _="reg_bit" b="16" doc="DAC channel2 enable" /><BOFF2 _="reg_bit" b="17" doc="DAC channel2 output buffer disable" /><TEN2 _="reg_bit" b="18" doc="DAC channel2 Trigger enable" /><TSEL2 _="reg_bit" b="19" doc="TSEL2[2:0] (DAC channel2 Trigger selection)" e="21" /><WAVE2 _="reg_bit" b="22" doc="WAVE2[1:0] (DAC channel2 noise/triangle wave generation enable)" e="23" /><MAMP2 _="reg_bit" b="24" doc="MAMP2[3:0] (DAC channel2 Mask/Amplitude selector)" e="27" /><DMAEN2 _="reg_bit" b="28" doc="DAC channel2 DMA enabled" /><DMAUDRIE2 _="reg_bit" b="29" doc="DAC channel2 DMA underrun interrupt enable" /></v></CR><SWTRIGR _="struct_field" doc="" l="4"><v _="nl"><SWTRIG1 _="reg_bit" b="0" doc="DAC channel1 software trigger" /><SWTRIG2 _="reg_bit" b="1" doc="DAC channel2 software trigger" /></v></SWTRIGR><DHR12R1 _="struct_field" doc="" l="4"><v _="nl"><DACC1DHR _="reg_bit" b="0" doc="DAC channel1 12-bit Right aligned data" e="11" /></v></DHR12R1><DHR12L1 _="struct_field" doc="" l="4"><v _="nl"><DACC1DHR _="reg_bit" b="4" doc="DAC channel1 12-bit Left aligned data" e="15" /></v></DHR12L1><DHR8R1 _="struct_field" doc="" l="4"><v _="nl"><DACC1DHR _="reg_bit" b="0" doc="DAC channel1 8-bit Right aligned data" e="7" /></v></DHR8R1><DHR12R2 _="struct_field" doc="" l="4"><v _="nl"><DACC2DHR _="reg_bit" b="0" doc="DAC channel2 12-bit Right aligned data" e="11" /></v></DHR12R2><DHR12L2 _="struct_field" doc="" l="4"><v _="nl"><DACC2DHR _="reg_bit" b="4" doc="DAC channel2 12-bit Left aligned data" e="15" /></v></DHR12L2><DHR8R2 _="struct_field" doc="" l="4"><v _="nl"><DACC2DHR _="reg_bit" b="0" doc="DAC channel2 8-bit Right aligned data" e="7" /></v></DHR8R2><DHR12RD _="struct_field" doc="" l="4"><v _="nl"><DACC1DHR _="reg_bit" b="0" doc="DAC channel1 12-bit Right aligned data" e="11" /><DACC2DHR _="reg_bit" b="16" doc="DAC channel2 12-bit Right aligned data" e="27" /></v></DHR12RD><DHR12LD _="struct_field" doc="" l="4"><v _="nl"><DACC1DHR _="reg_bit" b="4" doc="DAC channel1 12-bit Left aligned data" e="15" /><DACC2DHR _="reg_bit" b="20" doc="DAC channel2 12-bit Left aligned data" e="31" /></v></DHR12LD><DHR8RD _="struct_field" doc="" l="4"><v _="nl"><DACC1DHR _="reg_bit" b="0" doc="DAC channel1 8-bit Right aligned data" e="7" /><DACC2DHR _="reg_bit" b="8" doc="DAC channel2 8-bit Right aligned data" e="15" /></v></DHR8RD><DOR1 _="struct_field" doc="" l="4"><v _="nl"><DACC1DOR _="reg_bit" b="0" doc="DAC channel1 data output" e="11" /></v></DOR1><DOR2 _="struct_field" doc="" l="4"><v _="nl"><DACC2DOR _="reg_bit" b="0" doc="DAC channel2 data output" e="11" /></v></DOR2><SR _="struct_field" doc="" l="4"><v _="nl"><DMAUDR1 _="reg_bit" b="13" doc="DAC channel1 DMA underrun flag" /><DMAUDR2 _="reg_bit" b="29" doc="DAC channel2 DMA underrun flag" /></v></SR></t></DAC><DBGMCU _="struct_descr" rn="DBGMCU_TypeDef"><t _="nl"><IDCODE _="struct_field" doc="" l="4"><v _="nl" /></IDCODE><CR _="struct_field" doc="" l="4"><v _="nl" /></CR></t></DBGMCU><DMA_Channel _="struct_descr" rn="DMA_Channel_TypeDef"><t _="nl"><CCR _="struct_field" doc="" l="4"><v _="nl" /></CCR><CNDTR _="struct_field" doc="" l="4"><v _="nl" /></CNDTR><CPAR _="struct_field" doc="" l="4"><v _="nl" /></CPAR><CMAR _="struct_field" doc="" l="4"><v _="nl" /></CMAR></t></DMA_Channel><DMA _="struct_descr" rn="DMA_TypeDef"><t _="nl"><ISR _="struct_field" doc="" l="4"><v _="nl"><GIF1 _="reg_bit" b="0" doc="Channel 1 Global interrupt flag" /><TCIF1 _="reg_bit" b="1" doc="Channel 1 Transfer Complete flag" /><HTIF1 _="reg_bit" b="2" doc="Channel 1 Half Transfer flag" /><TEIF1 _="reg_bit" b="3" doc="Channel 1 Transfer Error flag" /><GIF2 _="reg_bit" b="4" doc="Channel 2 Global interrupt flag" /><TCIF2 _="reg_bit" b="5" doc="Channel 2 Transfer Complete flag" /><HTIF2 _="reg_bit" b="6" doc="Channel 2 Half Transfer flag" /><TEIF2 _="reg_bit" b="7" doc="Channel 2 Transfer Error flag" /><GIF3 _="reg_bit" b="8" doc="Channel 3 Global interrupt flag" /><TCIF3 _="reg_bit" b="9" doc="Channel 3 Transfer Complete flag" /><HTIF3 _="reg_bit" b="10" doc="Channel 3 Half Transfer flag" /><TEIF3 _="reg_bit" b="11" doc="Channel 3 Transfer Error flag" /><GIF4 _="reg_bit" b="12" doc="Channel 4 Global interrupt flag" /><TCIF4 _="reg_bit" b="13" doc="Channel 4 Transfer Complete flag" /><HTIF4 _="reg_bit" b="14" doc="Channel 4 Half Transfer flag" /><TEIF4 _="reg_bit" b="15" doc="Channel 4 Transfer Error flag" /><GIF5 _="reg_bit" b="16" doc="Channel 5 Global interrupt flag" /><TCIF5 _="reg_bit" b="17" doc="Channel 5 Transfer Complete flag" /><HTIF5 _="reg_bit" b="18" doc="Channel 5 Half Transfer flag" /><TEIF5 _="reg_bit" b="19" doc="Channel 5 Transfer Error flag" /><GIF6 _="reg_bit" b="20" doc="Channel 6 Global interrupt flag" /><TCIF6 _="reg_bit" b="21" doc="Channel 6 Transfer Complete flag" /><HTIF6 _="reg_bit" b="22" doc="Channel 6 Half Transfer flag" /><TEIF6 _="reg_bit" b="23" doc="Channel 6 Transfer Error flag" /><GIF7 _="reg_bit" b="24" doc="Channel 7 Global interrupt flag" /><TCIF7 _="reg_bit" b="25" doc="Channel 7 Transfer Complete flag" /><HTIF7 _="reg_bit" b="26" doc="Channel 7 Half Transfer flag" /><TEIF7 _="reg_bit" b="27" doc="Channel 7 Transfer Error flag" /></v></ISR><IFCR _="struct_field" doc="" l="4"><v _="nl"><CGIF1 _="reg_bit" b="0" doc="Channel 1 Global interrupt clear" /><CTCIF1 _="reg_bit" b="1" doc="Channel 1 Transfer Complete clear" /><CHTIF1 _="reg_bit" b="2" doc="Channel 1 Half Transfer clear" /><CTEIF1 _="reg_bit" b="3" doc="Channel 1 Transfer Error clear" /><CGIF2 _="reg_bit" b="4" doc="Channel 2 Global interrupt clear" /><CTCIF2 _="reg_bit" b="5" doc="Channel 2 Transfer Complete clear" /><CHTIF2 _="reg_bit" b="6" doc="Channel 2 Half Transfer clear" /><CTEIF2 _="reg_bit" b="7" doc="Channel 2 Transfer Error clear" /><CGIF3 _="reg_bit" b="8" doc="Channel 3 Global interrupt clear" /><CTCIF3 _="reg_bit" b="9" doc="Channel 3 Transfer Complete clear" /><CHTIF3 _="reg_bit" b="10" doc="Channel 3 Half Transfer clear" /><CTEIF3 _="reg_bit" b="11" doc="Channel 3 Transfer Error clear" /><CGIF4 _="reg_bit" b="12" doc="Channel 4 Global interrupt clear" /><CTCIF4 _="reg_bit" b="13" doc="Channel 4 Transfer Complete clear" /><CHTIF4 _="reg_bit" b="14" doc="Channel 4 Half Transfer clear" /><CTEIF4 _="reg_bit" b="15" doc="Channel 4 Transfer Error clear" /><CGIF5 _="reg_bit" b="16" doc="Channel 5 Global interrupt clear" /><CTCIF5 _="reg_bit" b="17" doc="Channel 5 Transfer Complete clear" /><CHTIF5 _="reg_bit" b="18" doc="Channel 5 Half Transfer clear" /><CTEIF5 _="reg_bit" b="19" doc="Channel 5 Transfer Error clear" /><CGIF6 _="reg_bit" b="20" doc="Channel 6 Global interrupt clear" /><CTCIF6 _="reg_bit" b="21" doc="Channel 6 Transfer Complete clear" /><CHTIF6 _="reg_bit" b="22" doc="Channel 6 Half Transfer clear" /><CTEIF6 _="reg_bit" b="23" doc="Channel 6 Transfer Error clear" /><CGIF7 _="reg_bit" b="24" doc="Channel 7 Global interrupt clear" /><CTCIF7 _="reg_bit" b="25" doc="Channel 7 Transfer Complete clear" /><CHTIF7 _="reg_bit" b="26" doc="Channel 7 Half Transfer clear" /><CTEIF7 _="reg_bit" b="27" doc="Channel 7 Transfer Error clear" /></v></IFCR></t></DMA><EXTI _="struct_descr" rn="EXTI_TypeDef"><t _="nl"><IMR _="struct_field" doc="" l="4"><v _="nl"><MR0 _="reg_bit" b="0" doc="Interrupt Mask on line 0" /><MR1 _="reg_bit" b="1" doc="Interrupt Mask on line 1" /><MR2 _="reg_bit" b="2" doc="Interrupt Mask on line 2" /><MR3 _="reg_bit" b="3" doc="Interrupt Mask on line 3" /><MR4 _="reg_bit" b="4" doc="Interrupt Mask on line 4" /><MR5 _="reg_bit" b="5" doc="Interrupt Mask on line 5" /><MR6 _="reg_bit" b="6" doc="Interrupt Mask on line 6" /><MR7 _="reg_bit" b="7" doc="Interrupt Mask on line 7" /><MR8 _="reg_bit" b="8" doc="Interrupt Mask on line 8" /><MR9 _="reg_bit" b="9" doc="Interrupt Mask on line 9" /><MR10 _="reg_bit" b="10" doc="Interrupt Mask on line 10" /><MR11 _="reg_bit" b="11" doc="Interrupt Mask on line 11" /><MR12 _="reg_bit" b="12" doc="Interrupt Mask on line 12" /><MR13 _="reg_bit" b="13" doc="Interrupt Mask on line 13" /><MR14 _="reg_bit" b="14" doc="Interrupt Mask on line 14" /><MR15 _="reg_bit" b="15" doc="Interrupt Mask on line 15" /><MR16 _="reg_bit" b="16" doc="Interrupt Mask on line 16" /><MR17 _="reg_bit" b="17" doc="Interrupt Mask on line 17" /><MR18 _="reg_bit" b="18" doc="Interrupt Mask on line 18" /><MR19 _="reg_bit" b="19" doc="Interrupt Mask on line 19" /></v></IMR><EMR _="struct_field" doc="" l="4"><v _="nl"><MR0 _="reg_bit" b="0" doc="Event Mask on line 0" /><MR1 _="reg_bit" b="1" doc="Event Mask on line 1" /><MR2 _="reg_bit" b="2" doc="Event Mask on line 2" /><MR3 _="reg_bit" b="3" doc="Event Mask on line 3" /><MR4 _="reg_bit" b="4" doc="Event Mask on line 4" /><MR5 _="reg_bit" b="5" doc="Event Mask on line 5" /><MR6 _="reg_bit" b="6" doc="Event Mask on line 6" /><MR7 _="reg_bit" b="7" doc="Event Mask on line 7" /><MR8 _="reg_bit" b="8" doc="Event Mask on line 8" /><MR9 _="reg_bit" b="9" doc="Event Mask on line 9" /><MR10 _="reg_bit" b="10" doc="Event Mask on line 10" /><MR11 _="reg_bit" b="11" doc="Event Mask on line 11" /><MR12 _="reg_bit" b="12" doc="Event Mask on line 12" /><MR13 _="reg_bit" b="13" doc="Event Mask on line 13" /><MR14 _="reg_bit" b="14" doc="Event Mask on line 14" /><MR15 _="reg_bit" b="15" doc="Event Mask on line 15" /><MR16 _="reg_bit" b="16" doc="Event Mask on line 16" /><MR17 _="reg_bit" b="17" doc="Event Mask on line 17" /><MR18 _="reg_bit" b="18" doc="Event Mask on line 18" /><MR19 _="reg_bit" b="19" doc="Event Mask on line 19" /></v></EMR><RTSR _="struct_field" doc="" l="4"><v _="nl"><TR0 _="reg_bit" b="0" doc="Rising trigger event configuration bit of line 0" /><TR1 _="reg_bit" b="1" doc="Rising trigger event configuration bit of line 1" /><TR2 _="reg_bit" b="2" doc="Rising trigger event configuration bit of line 2" /><TR3 _="reg_bit" b="3" doc="Rising trigger event configuration bit of line 3" /><TR4 _="reg_bit" b="4" doc="Rising trigger event configuration bit of line 4" /><TR5 _="reg_bit" b="5" doc="Rising trigger event configuration bit of line 5" /><TR6 _="reg_bit" b="6" doc="Rising trigger event configuration bit of line 6" /><TR7 _="reg_bit" b="7" doc="Rising trigger event configuration bit of line 7" /><TR8 _="reg_bit" b="8" doc="Rising trigger event configuration bit of line 8" /><TR9 _="reg_bit" b="9" doc="Rising trigger event configuration bit of line 9" /><TR10 _="reg_bit" b="10" doc="Rising trigger event configuration bit of line 10" /><TR11 _="reg_bit" b="11" doc="Rising trigger event configuration bit of line 11" /><TR12 _="reg_bit" b="12" doc="Rising trigger event configuration bit of line 12" /><TR13 _="reg_bit" b="13" doc="Rising trigger event configuration bit of line 13" /><TR14 _="reg_bit" b="14" doc="Rising trigger event configuration bit of line 14" /><TR15 _="reg_bit" b="15" doc="Rising trigger event configuration bit of line 15" /><TR16 _="reg_bit" b="16" doc="Rising trigger event configuration bit of line 16" /><TR17 _="reg_bit" b="17" doc="Rising trigger event configuration bit of line 17" /><TR18 _="reg_bit" b="18" doc="Rising trigger event configuration bit of line 18" /><TR19 _="reg_bit" b="19" doc="Rising trigger event configuration bit of line 19" /></v></RTSR><FTSR _="struct_field" doc="" l="4"><v _="nl"><TR0 _="reg_bit" b="0" doc="Falling trigger event configuration bit of line 0" /><TR1 _="reg_bit" b="1" doc="Falling trigger event configuration bit of line 1" /><TR2 _="reg_bit" b="2" doc="Falling trigger event configuration bit of line 2" /><TR3 _="reg_bit" b="3" doc="Falling trigger event configuration bit of line 3" /><TR4 _="reg_bit" b="4" doc="Falling trigger event configuration bit of line 4" /><TR5 _="reg_bit" b="5" doc="Falling trigger event configuration bit of line 5" /><TR6 _="reg_bit" b="6" doc="Falling trigger event configuration bit of line 6" /><TR7 _="reg_bit" b="7" doc="Falling trigger event configuration bit of line 7" /><TR8 _="reg_bit" b="8" doc="Falling trigger event configuration bit of line 8" /><TR9 _="reg_bit" b="9" doc="Falling trigger event configuration bit of line 9" /><TR10 _="reg_bit" b="10" doc="Falling trigger event configuration bit of line 10" /><TR11 _="reg_bit" b="11" doc="Falling trigger event configuration bit of line 11" /><TR12 _="reg_bit" b="12" doc="Falling trigger event configuration bit of line 12" /><TR13 _="reg_bit" b="13" doc="Falling trigger event configuration bit of line 13" /><TR14 _="reg_bit" b="14" doc="Falling trigger event configuration bit of line 14" /><TR15 _="reg_bit" b="15" doc="Falling trigger event configuration bit of line 15" /><TR16 _="reg_bit" b="16" doc="Falling trigger event configuration bit of line 16" /><TR17 _="reg_bit" b="17" doc="Falling trigger event configuration bit of line 17" /><TR18 _="reg_bit" b="18" doc="Falling trigger event configuration bit of line 18" /><TR19 _="reg_bit" b="19" doc="Falling trigger event configuration bit of line 19" /></v></FTSR><SWIER _="struct_field" doc="" l="4"><v _="nl"><SWIER0 _="reg_bit" b="0" doc="Software Interrupt on line 0" /><SWIER1 _="reg_bit" b="1" doc="Software Interrupt on line 1" /><SWIER2 _="reg_bit" b="2" doc="Software Interrupt on line 2" /><SWIER3 _="reg_bit" b="3" doc="Software Interrupt on line 3" /><SWIER4 _="reg_bit" b="4" doc="Software Interrupt on line 4" /><SWIER5 _="reg_bit" b="5" doc="Software Interrupt on line 5" /><SWIER6 _="reg_bit" b="6" doc="Software Interrupt on line 6" /><SWIER7 _="reg_bit" b="7" doc="Software Interrupt on line 7" /><SWIER8 _="reg_bit" b="8" doc="Software Interrupt on line 8" /><SWIER9 _="reg_bit" b="9" doc="Software Interrupt on line 9" /><SWIER10 _="reg_bit" b="10" doc="Software Interrupt on line 10" /><SWIER11 _="reg_bit" b="11" doc="Software Interrupt on line 11" /><SWIER12 _="reg_bit" b="12" doc="Software Interrupt on line 12" /><SWIER13 _="reg_bit" b="13" doc="Software Interrupt on line 13" /><SWIER14 _="reg_bit" b="14" doc="Software Interrupt on line 14" /><SWIER15 _="reg_bit" b="15" doc="Software Interrupt on line 15" /><SWIER16 _="reg_bit" b="16" doc="Software Interrupt on line 16" /><SWIER17 _="reg_bit" b="17" doc="Software Interrupt on line 17" /><SWIER18 _="reg_bit" b="18" doc="Software Interrupt on line 18" /><SWIER19 _="reg_bit" b="19" doc="Software Interrupt on line 19" /></v></SWIER><PR _="struct_field" doc="" l="4"><v _="nl"><PR0 _="reg_bit" b="0" doc="Pending bit for line 0" /><PR1 _="reg_bit" b="1" doc="Pending bit for line 1" /><PR2 _="reg_bit" b="2" doc="Pending bit for line 2" /><PR3 _="reg_bit" b="3" doc="Pending bit for line 3" /><PR4 _="reg_bit" b="4" doc="Pending bit for line 4" /><PR5 _="reg_bit" b="5" doc="Pending bit for line 5" /><PR6 _="reg_bit" b="6" doc="Pending bit for line 6" /><PR7 _="reg_bit" b="7" doc="Pending bit for line 7" /><PR8 _="reg_bit" b="8" doc="Pending bit for line 8" /><PR9 _="reg_bit" b="9" doc="Pending bit for line 9" /><PR10 _="reg_bit" b="10" doc="Pending bit for line 10" /><PR11 _="reg_bit" b="11" doc="Pending bit for line 11" /><PR12 _="reg_bit" b="12" doc="Pending bit for line 12" /><PR13 _="reg_bit" b="13" doc="Pending bit for line 13" /><PR14 _="reg_bit" b="14" doc="Pending bit for line 14" /><PR15 _="reg_bit" b="15" doc="Pending bit for line 15" /><PR16 _="reg_bit" b="16" doc="Pending bit for line 16" /><PR17 _="reg_bit" b="17" doc="Pending bit for line 17" /><PR18 _="reg_bit" b="18" doc="Pending bit for line 18" /><PR19 _="reg_bit" b="19" doc="Pending bit for line 19" /></v></PR></t></EXTI><FLASH _="struct_descr" rn="FLASH_TypeDef"><t _="nl"><ACR _="struct_field" doc="" l="4"><v _="nl"><HLFCYA _="reg_bit" b="3" doc="Flash Half Cycle Access Enable" /></v></ACR><KEYR _="struct_field" doc="" l="4"><v _="nl"><FKEYR _="reg_bit" b="0" doc="FPEC Key" e="31" /></v></KEYR><OPTKEYR _="struct_field" doc="" l="4"><v _="nl"><OPTKEYR _="reg_bit" b="0" doc="Option Byte Key" e="31" /></v></OPTKEYR><SR _="struct_field" doc="" l="4"><v _="nl"><BSY _="reg_bit" b="0" doc="Busy" /><PGERR _="reg_bit" b="2" doc="Programming Error" /><WRPRTERR _="reg_bit" b="4" doc="Write Protection Error" /><EOP _="reg_bit" b="5" doc="End of operation" /></v></SR><CR _="struct_field" doc="" l="4"><v _="nl"><PG _="reg_bit" b="0" doc="Programming" /><PER _="reg_bit" b="1" doc="Page Erase" /><MER _="reg_bit" b="2" doc="Mass Erase" /><OPTPG _="reg_bit" b="4" doc="Option Byte Programming" /><OPTER _="reg_bit" b="5" doc="Option Byte Erase" /><STRT _="reg_bit" b="6" doc="Start" /><LOCK _="reg_bit" b="7" doc="Lock" /><OPTWRE _="reg_bit" b="9" doc="Option Bytes Write Enable" /><ERRIE _="reg_bit" b="10" doc="Error Interrupt Enable" /><EOPIE _="reg_bit" b="12" doc="End of operation interrupt enable" /></v></CR><AR _="struct_field" doc="" l="4"><v _="nl"><FAR _="reg_bit" b="0" doc="Flash Address" e="31" /></v></AR><RESERVED _="struct_field" doc="" l="4"><v _="nl" /></RESERVED><OBR _="struct_field" doc="" l="4"><v _="nl"><OPTERR _="reg_bit" b="0" doc="Option Byte Error" /><RDPRT _="reg_bit" b="1" doc="Read protection" /><USER _="reg_bit" b="2" doc="User Option Bytes" e="4" /></v></OBR><WRPR _="struct_field" doc="" l="4"><v _="nl"><WRP _="reg_bit" b="0" doc="Write Protect" e="31" /></v></WRPR></t></FLASH><OB _="struct_descr" rn="OB_TypeDef"><t _="nl"><RDP _="struct_field" doc="" l="2"><v _="nl" /></RDP><USER _="struct_field" doc="" l="2"><v _="nl" /></USER><Data0 _="struct_field" doc="" l="2"><v _="nl" /></Data0><Data1 _="struct_field" doc="" l="2"><v _="nl" /></Data1><WRP0 _="struct_field" doc="" l="2"><v _="nl" /></WRP0><WRP1 _="struct_field" doc="" l="2"><v _="nl" /></WRP1><WRP2 _="struct_field" doc="" l="2"><v _="nl" /></WRP2><WRP3 _="struct_field" doc="" l="2"><v _="nl" /></WRP3></t></OB><GPIO _="struct_descr" rn="GPIO_TypeDef"><t _="nl"><CR _="struct_field" doc="" l="4" ne="2"><v _="nl"><MODE0 _="reg_bit" b="0" doc="MODE0[1:0] bits (Port x mode bits, pin 0)" e="1" /><CNF0 _="reg_bit" b="2" doc="CNF0[1:0] bits (Port x configuration bits, pin 0)" e="3" /><MODE1 _="reg_bit" b="4" doc="MODE1[1:0] bits (Port x mode bits, pin 1)" e="5" /><CNF1 _="reg_bit" b="6" doc="CNF1[1:0] bits (Port x configuration bits, pin 1)" e="7" /><MODE2 _="reg_bit" b="8" doc="MODE2[1:0] bits (Port x mode bits, pin 2)" e="9" /><CNF2 _="reg_bit" b="10" doc="CNF2[1:0] bits (Port x configuration bits, pin 2)" e="11" /><MODE3 _="reg_bit" b="12" doc="MODE3[1:0] bits (Port x mode bits, pin 3)" e="13" /><CNF3 _="reg_bit" b="14" doc="CNF3[1:0] bits (Port x configuration bits, pin 3)" e="15" /><MODE4 _="reg_bit" b="16" doc="MODE4[1:0] bits (Port x mode bits, pin 4)" e="17" /><CNF4 _="reg_bit" b="18" doc="CNF4[1:0] bits (Port x configuration bits, pin 4)" e="19" /><MODE5 _="reg_bit" b="20" doc="MODE5[1:0] bits (Port x mode bits, pin 5)" e="21" /><CNF5 _="reg_bit" b="22" doc="CNF5[1:0] bits (Port x configuration bits, pin 5)" e="23" /><MODE6 _="reg_bit" b="24" doc="MODE6[1:0] bits (Port x mode bits, pin 6)" e="25" /><CNF6 _="reg_bit" b="26" doc="CNF6[1:0] bits (Port x configuration bits, pin 6)" e="27" /><MODE7 _="reg_bit" b="28" doc="MODE7[1:0] bits (Port x mode bits, pin 7)" e="29" /><CNF7 _="reg_bit" b="30" doc="CNF7[1:0] bits (Port x configuration bits, pin 7)" e="31" /><MODE _="reg_bit" b="64" doc="Port x mode bits" e="29" /><MODE8 _="reg_bit" b="64" doc="MODE8[1:0] bits (Port x mode bits, pin 8)" e="1" /><CNF _="reg_bit" b="66" doc="Port x configuration bits" e="31" /><CNF8 _="reg_bit" b="66" doc="CNF8[1:0] bits (Port x configuration bits, pin 8)" e="3" /><MODE9 _="reg_bit" b="68" doc="MODE9[1:0] bits (Port x mode bits, pin 9)" e="5" /><CNF9 _="reg_bit" b="70" doc="CNF9[1:0] bits (Port x configuration bits, pin 9)" e="7" /><MODE10 _="reg_bit" b="72" doc="MODE10[1:0] bits (Port x mode bits, pin 10)" e="9" /><CNF10 _="reg_bit" b="74" doc="CNF10[1:0] bits (Port x configuration bits, pin 10)" e="11" /><MODE11 _="reg_bit" b="76" doc="MODE11[1:0] bits (Port x mode bits, pin 11)" e="13" /><CNF11 _="reg_bit" b="78" doc="CNF11[1:0] bits (Port x configuration bits, pin 11)" e="15" /><MODE12 _="reg_bit" b="80" doc="MODE12[1:0] bits (Port x mode bits, pin 12)" e="17" /><CNF12 _="reg_bit" b="82" doc="CNF12[1:0] bits (Port x configuration bits, pin 12)" e="19" /><MODE13 _="reg_bit" b="84" doc="MODE13[1:0] bits (Port x mode bits, pin 13)" e="21" /><CNF13 _="reg_bit" b="86" doc="CNF13[1:0] bits (Port x configuration bits, pin 13)" e="23" /><MODE14 _="reg_bit" b="88" doc="MODE14[1:0] bits (Port x mode bits, pin 14)" e="25" /><CNF14 _="reg_bit" b="90" doc="CNF14[1:0] bits (Port x configuration bits, pin 14)" e="27" /><MODE15 _="reg_bit" b="92" doc="MODE15[1:0] bits (Port x mode bits, pin 15)" e="29" /><CNF15 _="reg_bit" b="94" doc="CNF15[1:0] bits (Port x configuration bits, pin 15)" e="31" /></v></CR><IDR _="struct_field" doc="" l="4"><v _="nl"><IDR0 _="reg_bit" b="0" doc="Port input data, bit 0" /><IDR1 _="reg_bit" b="1" doc="Port input data, bit 1" /><IDR2 _="reg_bit" b="2" doc="Port input data, bit 2" /><IDR3 _="reg_bit" b="3" doc="Port input data, bit 3" /><IDR4 _="reg_bit" b="4" doc="Port input data, bit 4" /><IDR5 _="reg_bit" b="5" doc="Port input data, bit 5" /><IDR6 _="reg_bit" b="6" doc="Port input data, bit 6" /><IDR7 _="reg_bit" b="7" doc="Port input data, bit 7" /><IDR8 _="reg_bit" b="8" doc="Port input data, bit 8" /><IDR9 _="reg_bit" b="9" doc="Port input data, bit 9" /><IDR10 _="reg_bit" b="10" doc="Port input data, bit 10" /><IDR11 _="reg_bit" b="11" doc="Port input data, bit 11" /><IDR12 _="reg_bit" b="12" doc="Port input data, bit 12" /><IDR13 _="reg_bit" b="13" doc="Port input data, bit 13" /><IDR14 _="reg_bit" b="14" doc="Port input data, bit 14" /><IDR15 _="reg_bit" b="15" doc="Port input data, bit 15" /></v></IDR><ODR _="struct_field" doc="" l="4"><v _="nl"><ODR0 _="reg_bit" b="0" doc="Port output data, bit 0" /><ODR1 _="reg_bit" b="1" doc="Port output data, bit 1" /><ODR2 _="reg_bit" b="2" doc="Port output data, bit 2" /><ODR3 _="reg_bit" b="3" doc="Port output data, bit 3" /><ODR4 _="reg_bit" b="4" doc="Port output data, bit 4" /><ODR5 _="reg_bit" b="5" doc="Port output data, bit 5" /><ODR6 _="reg_bit" b="6" doc="Port output data, bit 6" /><ODR7 _="reg_bit" b="7" doc="Port output data, bit 7" /><ODR8 _="reg_bit" b="8" doc="Port output data, bit 8" /><ODR9 _="reg_bit" b="9" doc="Port output data, bit 9" /><ODR10 _="reg_bit" b="10" doc="Port output data, bit 10" /><ODR11 _="reg_bit" b="11" doc="Port output data, bit 11" /><ODR12 _="reg_bit" b="12" doc="Port output data, bit 12" /><ODR13 _="reg_bit" b="13" doc="Port output data, bit 13" /><ODR14 _="reg_bit" b="14" doc="Port output data, bit 14" /><ODR15 _="reg_bit" b="15" doc="Port output data, bit 15" /></v></ODR><BSRR _="struct_field" doc="" l="4"><v _="nl"><BS0 _="reg_bit" b="0" doc="Port x Set bit 0" /><BS1 _="reg_bit" b="1" doc="Port x Set bit 1" /><BS2 _="reg_bit" b="2" doc="Port x Set bit 2" /><BS3 _="reg_bit" b="3" doc="Port x Set bit 3" /><BS4 _="reg_bit" b="4" doc="Port x Set bit 4" /><BS5 _="reg_bit" b="5" doc="Port x Set bit 5" /><BS6 _="reg_bit" b="6" doc="Port x Set bit 6" /><BS7 _="reg_bit" b="7" doc="Port x Set bit 7" /><BS8 _="reg_bit" b="8" doc="Port x Set bit 8" /><BS9 _="reg_bit" b="9" doc="Port x Set bit 9" /><BS10 _="reg_bit" b="10" doc="Port x Set bit 10" /><BS11 _="reg_bit" b="11" doc="Port x Set bit 11" /><BS12 _="reg_bit" b="12" doc="Port x Set bit 12" /><BS13 _="reg_bit" b="13" doc="Port x Set bit 13" /><BS14 _="reg_bit" b="14" doc="Port x Set bit 14" /><BS15 _="reg_bit" b="15" doc="Port x Set bit 15" /><BR0 _="reg_bit" b="16" doc="Port x Reset bit 0" /><BR1 _="reg_bit" b="17" doc="Port x Reset bit 1" /><BR2 _="reg_bit" b="18" doc="Port x Reset bit 2" /><BR3 _="reg_bit" b="19" doc="Port x Reset bit 3" /><BR4 _="reg_bit" b="20" doc="Port x Reset bit 4" /><BR5 _="reg_bit" b="21" doc="Port x Reset bit 5" /><BR6 _="reg_bit" b="22" doc="Port x Reset bit 6" /><BR7 _="reg_bit" b="23" doc="Port x Reset bit 7" /><BR8 _="reg_bit" b="24" doc="Port x Reset bit 8" /><BR9 _="reg_bit" b="25" doc="Port x Reset bit 9" /><BR10 _="reg_bit" b="26" doc="Port x Reset bit 10" /><BR11 _="reg_bit" b="27" doc="Port x Reset bit 11" /><BR12 _="reg_bit" b="28" doc="Port x Reset bit 12" /><BR13 _="reg_bit" b="29" doc="Port x Reset bit 13" /><BR14 _="reg_bit" b="30" doc="Port x Reset bit 14" /><BR15 _="reg_bit" b="31" doc="Port x Reset bit 15" /></v></BSRR><BRR _="struct_field" doc="" l="4"><v _="nl"><BR0 _="reg_bit" b="0" doc="Port x Reset bit 0" /><BR1 _="reg_bit" b="1" doc="Port x Reset bit 1" /><BR2 _="reg_bit" b="2" doc="Port x Reset bit 2" /><BR3 _="reg_bit" b="3" doc="Port x Reset bit 3" /><BR4 _="reg_bit" b="4" doc="Port x Reset bit 4" /><BR5 _="reg_bit" b="5" doc="Port x Reset bit 5" /><BR6 _="reg_bit" b="6" doc="Port x Reset bit 6" /><BR7 _="reg_bit" b="7" doc="Port x Reset bit 7" /><BR8 _="reg_bit" b="8" doc="Port x Reset bit 8" /><BR9 _="reg_bit" b="9" doc="Port x Reset bit 9" /><BR10 _="reg_bit" b="10" doc="Port x Reset bit 10" /><BR11 _="reg_bit" b="11" doc="Port x Reset bit 11" /><BR12 _="reg_bit" b="12" doc="Port x Reset bit 12" /><BR13 _="reg_bit" b="13" doc="Port x Reset bit 13" /><BR14 _="reg_bit" b="14" doc="Port x Reset bit 14" /><BR15 _="reg_bit" b="15" doc="Port x Reset bit 15" /></v></BRR><LCKR _="struct_field" doc="" l="4"><v _="nl"><LCK0 _="reg_bit" b="0" doc="Port x Lock bit 0" /><LCK1 _="reg_bit" b="1" doc="Port x Lock bit 1" /><LCK2 _="reg_bit" b="2" doc="Port x Lock bit 2" /><LCK3 _="reg_bit" b="3" doc="Port x Lock bit 3" /><LCK4 _="reg_bit" b="4" doc="Port x Lock bit 4" /><LCK5 _="reg_bit" b="5" doc="Port x Lock bit 5" /><LCK6 _="reg_bit" b="6" doc="Port x Lock bit 6" /><LCK7 _="reg_bit" b="7" doc="Port x Lock bit 7" /><LCK8 _="reg_bit" b="8" doc="Port x Lock bit 8" /><LCK9 _="reg_bit" b="9" doc="Port x Lock bit 9" /><LCK10 _="reg_bit" b="10" doc="Port x Lock bit 10" /><LCK11 _="reg_bit" b="11" doc="Port x Lock bit 11" /><LCK12 _="reg_bit" b="12" doc="Port x Lock bit 12" /><LCK13 _="reg_bit" b="13" doc="Port x Lock bit 13" /><LCK14 _="reg_bit" b="14" doc="Port x Lock bit 14" /><LCK15 _="reg_bit" b="15" doc="Port x Lock bit 15" /><LCKK _="reg_bit" b="16" doc="Lock key" /></v></LCKR></t></GPIO><AFIO _="struct_descr" rn="AFIO_TypeDef"><t _="nl"><EVCR _="struct_field" doc="" l="4"><v _="nl"><PIN _="reg_bit" b="0" doc="PIN[3:0] bits (Pin selection)" e="3" /><PORT _="reg_bit" b="4" doc="PORT[2:0] bits (Port selection)" e="6" /><EVOE _="reg_bit" b="7" doc="Event Output Enable" /></v></EVCR><MAPR _="struct_field" doc="" l="4"><v _="nl" /></MAPR><EXTICR _="struct_field" doc="" l="4" ne="4"><v _="nl" /></EXTICR><RESERVED0 _="struct_field" doc="" l="4"><v _="nl" /></RESERVED0><MAPR2 _="struct_field" doc="" l="4"><v _="nl" /></MAPR2></t></AFIO><I2C _="struct_descr" rn="I2C_TypeDef"><t _="nl"><CR1 _="struct_field" doc="" l="4"><v _="nl"><PE _="reg_bit" b="0" doc="Peripheral Enable" /><SMBUS _="reg_bit" b="1" doc="SMBus Mode" /><SMBTYPE _="reg_bit" b="3" doc="SMBus Type" /><ENARP _="reg_bit" b="4" doc="ARP Enable" /><ENPEC _="reg_bit" b="5" doc="PEC Enable" /><ENGC _="reg_bit" b="6" doc="General Call Enable" /><NOSTRETCH _="reg_bit" b="7" doc="Clock Stretching Disable (Slave mode)" /><START _="reg_bit" b="8" doc="Start Generation" /><STOP _="reg_bit" b="9" doc="Stop Generation" /><ACK _="reg_bit" b="10" doc="Acknowledge Enable" /><POS _="reg_bit" b="11" doc="Acknowledge/PEC Position (for data reception)" /><PEC _="reg_bit" b="12" doc="Packet Error Checking" /><ALERT _="reg_bit" b="13" doc="SMBus Alert" /><SWRST _="reg_bit" b="15" doc="Software Reset" /></v></CR1><CR2 _="struct_field" doc="" l="4"><v _="nl"><FREQ _="reg_bit" b="0" doc="FREQ[5:0] bits (Peripheral Clock Frequency)" e="5" /><ITERREN _="reg_bit" b="8" doc="Error Interrupt Enable" /><ITEVTEN _="reg_bit" b="9" doc="Event Interrupt Enable" /><ITBUFEN _="reg_bit" b="10" doc="Buffer Interrupt Enable" /><DMAEN _="reg_bit" b="11" doc="DMA Requests Enable" /><LAST _="reg_bit" b="12" doc="DMA Last Transfer" /></v></CR2><OAR1 _="struct_field" doc="" l="4"><v _="nl"><ADD0 _="reg_bit" b="0" doc="Bit 0" /><ADD1 _="reg_bit" b="1" doc="Bit 1" /><ADD2 _="reg_bit" b="2" doc="Bit 2" /><ADD3 _="reg_bit" b="3" doc="Bit 3" /><ADD4 _="reg_bit" b="4" doc="Bit 4" /><ADD5 _="reg_bit" b="5" doc="Bit 5" /><ADD6 _="reg_bit" b="6" doc="Bit 6" /><ADD7 _="reg_bit" b="7" doc="Bit 7" /><ADD8 _="reg_bit" b="8" doc="Bit 8" /><ADD9 _="reg_bit" b="9" doc="Bit 9" /><ADDMODE _="reg_bit" b="15" doc="Addressing Mode (Slave mode)" /></v></OAR1><OAR2 _="struct_field" doc="" l="4"><v _="nl"><ENDUAL _="reg_bit" b="0" doc="Dual addressing mode enable" /><ADD2 _="reg_bit" b="1" doc="Interface address" e="7" /></v></OAR2><DR _="struct_field" doc="" l="4"><v _="nl" /></DR><SR1 _="struct_field" doc="" l="4"><v _="nl"><SB _="reg_bit" b="0" doc="Start Bit (Master mode)" /><ADDR _="reg_bit" b="1" doc="Address sent (master mode)/matched (slave mode)" /><BTF _="reg_bit" b="2" doc="Byte Transfer Finished" /><ADD10 _="reg_bit" b="3" doc="10-bit header sent (Master mode)" /><STOPF _="reg_bit" b="4" doc="Stop detection (Slave mode)" /><RXNE _="reg_bit" b="6" doc="Data Register not Empty (receivers)" /><TXE _="reg_bit" b="7" doc="Data Register Empty (transmitters)" /><BERR _="reg_bit" b="8" doc="Bus Error" /><ARLO _="reg_bit" b="9" doc="Arbitration Lost (master mode)" /><AF _="reg_bit" b="10" doc="Acknowledge Failure" /><OVR _="reg_bit" b="11" doc="Overrun/Underrun" /><PECERR _="reg_bit" b="12" doc="PEC Error in reception" /><TIMEOUT _="reg_bit" b="14" doc="Timeout or Tlow Error" /><SMBALERT _="reg_bit" b="15" doc="SMBus Alert" /></v></SR1><SR2 _="struct_field" doc="" l="4"><v _="nl"><MSL _="reg_bit" b="0" doc="Master/Slave" /><BUSY _="reg_bit" b="1" doc="Bus Busy" /><TRA _="reg_bit" b="2" doc="Transmitter/Receiver" /><GENCALL _="reg_bit" b="4" doc="General Call Address (Slave mode)" /><SMBDEFAULT _="reg_bit" b="5" doc="SMBus Device Default Address (Slave mode)" /><SMBHOST _="reg_bit" b="6" doc="SMBus Host Header (Slave mode)" /><DUALF _="reg_bit" b="7" doc="Dual Flag (Slave mode)" /><PEC _="reg_bit" b="8" doc="Packet Error Checking Register" e="15" /></v></SR2><CCR _="struct_field" doc="" l="4"><v _="nl"><CCR _="reg_bit" b="0" doc="Clock Control Register in Fast/Standard mode (Master mode)" e="11" /><DUTY _="reg_bit" b="14" doc="Fast Mode Duty Cycle" /><FS _="reg_bit" b="15" doc="I2C Master Mode Selection" /></v></CCR><TRISE _="struct_field" doc="" l="4"><v _="nl"><TRISE _="reg_bit" b="0" doc="Maximum Rise Time in Fast/Standard mode (Master mode)" e="5" /></v></TRISE></t></I2C><IWDG _="struct_descr" rn="IWDG_TypeDef"><t _="nl"><KR _="struct_field" doc="Key register, Address offset: 0x00" l="4"><v _="nl"><KEY _="reg_bit" b="0" doc="Key value (write only, read 0000h)" e="15" /></v></KR><PR _="struct_field" doc="Prescaler register, Address offset: 0x04" l="4"><v _="nl"><PR _="reg_bit" b="0" doc="PR[2:0] (Prescaler divider)" e="2" /></v></PR><RLR _="struct_field" doc="Reload register,  Address offset: 0x08" l="4"><v _="nl"><RL _="reg_bit" b="0" doc="Watchdog counter reload value" e="11" /></v></RLR><SR _="struct_field" doc="Status register,  Address offset: 0x0C" l="4"><v _="nl"><PVU _="reg_bit" b="0" doc="Watchdog prescaler value update" /><RVU _="reg_bit" b="1" doc="Watchdog counter reload value update" /></v></SR></t></IWDG><PWR _="struct_descr" rn="PWR_TypeDef"><t _="nl"><CR _="struct_field" doc="" l="4"><v _="nl"><LPDS _="reg_bit" b="0" doc="Low-Power Deepsleep" /><PDDS _="reg_bit" b="1" doc="Power Down Deepsleep" /><CWUF _="reg_bit" b="2" doc="Clear Wakeup Flag" /><CSBF _="reg_bit" b="3" doc="Clear Standby Flag" /><PVDE _="reg_bit" b="4" doc="Power Voltage Detector Enable" /><PLS _="reg_bit" b="5" doc="PLS[2:0] bits (PVD Level Selection)" e="7" /><DBP _="reg_bit" b="8" doc="Disable Backup Domain write protection" /></v></CR><CSR _="struct_field" doc="" l="4"><v _="nl"><WUF _="reg_bit" b="0" doc="Wakeup Flag" /><SBF _="reg_bit" b="1" doc="Standby Flag" /><PVDO _="reg_bit" b="2" doc="PVD Output" /><EWUP _="reg_bit" b="8" doc="Enable WKUP pin" /></v></CSR></t></PWR><RCC _="struct_descr" rn="RCC_TypeDef"><t _="nl"><CR _="struct_field" doc="" l="4"><v _="nl"><HSION _="reg_bit" b="0" doc="Internal High Speed clock enable" /><HSIRDY _="reg_bit" b="1" doc="Internal High Speed clock ready flag" /><HSITRIM _="reg_bit" b="3" doc="Internal High Speed clock trimming" e="7" /><HSICAL _="reg_bit" b="8" doc="Internal High Speed clock Calibration" e="15" /><HSEON _="reg_bit" b="16" doc="External High Speed clock enable" /><HSERDY _="reg_bit" b="17" doc="External High Speed clock ready flag" /><HSEBYP _="reg_bit" b="18" doc="External High Speed clock Bypass" /><CSSON _="reg_bit" b="19" doc="Clock Security System enable" /><PLLON _="reg_bit" b="24" doc="PLL enable" /><PLLRDY _="reg_bit" b="25" doc="PLL clock ready flag" /></v></CR><CFGR _="struct_field" doc="" l="4"><v _="nl"><SW _="reg_bit" b="0" doc="SW[1:0] bits (System clock Switch)" e="1" /><SWS _="reg_bit" b="2" doc="SWS[1:0] bits (System Clock Switch Status)" e="3" /><HPRE _="reg_bit" b="4" doc="HPRE[3:0] bits (AHB prescaler)" e="7" /><PPRE1 _="reg_bit" b="8" doc="PRE1[2:0] bits (APB1 prescaler)" e="10" /><PPRE2 _="reg_bit" b="11" doc="PRE2[2:0] bits (APB2 prescaler)" e="13" /><ADCPRE _="reg_bit" b="14" doc="ADCPRE[1:0] bits (ADC prescaler)" e="15" /><PLLSRC _="reg_bit" b="16" doc="PLL entry clock source" /><PLLXTPRE _="reg_bit" b="17" doc="HSE divider for PLL entry" /><PLLMULL _="reg_bit" b="18" doc="PLLMUL[3:0] bits (PLL multiplication factor)" e="21" /><MCO _="reg_bit" b="24" doc="MCO[2:0] bits (Microcontroller Clock Output)" e="26" /></v></CFGR><CIR _="struct_field" doc="" l="4"><v _="nl"><LSIRDYF _="reg_bit" b="0" doc="LSI Ready Interrupt flag" /><LSERDYF _="reg_bit" b="1" doc="LSE Ready Interrupt flag" /><HSIRDYF _="reg_bit" b="2" doc="HSI Ready Interrupt flag" /><HSERDYF _="reg_bit" b="3" doc="HSE Ready Interrupt flag" /><PLLRDYF _="reg_bit" b="4" doc="PLL Ready Interrupt flag" /><CSSF _="reg_bit" b="7" doc="Clock Security System Interrupt flag" /><LSIRDYIE _="reg_bit" b="8" doc="LSI Ready Interrupt Enable" /><LSERDYIE _="reg_bit" b="9" doc="LSE Ready Interrupt Enable" /><HSIRDYIE _="reg_bit" b="10" doc="HSI Ready Interrupt Enable" /><HSERDYIE _="reg_bit" b="11" doc="HSE Ready Interrupt Enable" /><PLLRDYIE _="reg_bit" b="12" doc="PLL Ready Interrupt Enable" /><LSIRDYC _="reg_bit" b="16" doc="LSI Ready Interrupt Clear" /><LSERDYC _="reg_bit" b="17" doc="LSE Ready Interrupt Clear" /><HSIRDYC _="reg_bit" b="18" doc="HSI Ready Interrupt Clear" /><HSERDYC _="reg_bit" b="19" doc="HSE Ready Interrupt Clear" /><PLLRDYC _="reg_bit" b="20" doc="PLL Ready Interrupt Clear" /><CSSC _="reg_bit" b="23" doc="Clock Security System Interrupt Clear" /></v></CIR><APB2RSTR _="struct_field" doc="" l="4"><v _="nl"><AFIORST _="reg_bit" b="0" doc="Alternate Function I/O reset" /><IOPARST _="reg_bit" b="2" doc="I/O port A reset" /><IOPBRST _="reg_bit" b="3" doc="I/O port B reset" /><IOPCRST _="reg_bit" b="4" doc="I/O port C reset" /><IOPDRST _="reg_bit" b="5" doc="I/O port D reset" /><IOPERST _="reg_bit" b="6" doc="I/O port E reset" /><ADC1RST _="reg_bit" b="9" doc="ADC 1 interface reset" /><TIM1RST _="reg_bit" b="11" doc="TIM1 Timer reset" /><SPI1RST _="reg_bit" b="12" doc="SPI 1 reset" /><USART1RST _="reg_bit" b="14" doc="USART1 reset" /><TIM15RST _="reg_bit" b="16" doc="TIM15 Timer reset" /><TIM16RST _="reg_bit" b="17" doc="TIM16 Timer reset" /><TIM17RST _="reg_bit" b="18" doc="TIM17 Timer reset" /></v></APB2RSTR><APB1RSTR _="struct_field" doc="" l="4"><v _="nl"><TIM2RST _="reg_bit" b="0" doc="Timer 2 reset" /><TIM3RST _="reg_bit" b="1" doc="Timer 3 reset" /><TIM4RST _="reg_bit" b="2" doc="Timer 4 reset" /><TIM6RST _="reg_bit" b="4" doc="Timer 6 reset" /><TIM7RST _="reg_bit" b="5" doc="Timer 7 reset" /><WWDGRST _="reg_bit" b="11" doc="Window Watchdog reset" /><SPI2RST _="reg_bit" b="14" doc="SPI 2 reset" /><USART2RST _="reg_bit" b="17" doc="USART 2 reset" /><USART3RST _="reg_bit" b="18" doc="USART 3 reset" /><I2C1RST _="reg_bit" b="21" doc="I2C 1 reset" /><I2C2RST _="reg_bit" b="22" doc="I2C 2 reset" /><BKPRST _="reg_bit" b="27" doc="Backup interface reset" /><PWRRST _="reg_bit" b="28" doc="Power interface reset" /><DACRST _="reg_bit" b="29" doc="DAC interface reset" /><CECRST _="reg_bit" b="30" doc="CEC interface reset" /></v></APB1RSTR><ENR _="struct_field" doc="" l="4" ne="3"><v _="nl"><DMA1EN _="reg_bit" b="0" doc="DMA1 clock enable" /><SRAMEN _="reg_bit" b="2" doc="SRAM interface clock enable" /><FLITFEN _="reg_bit" b="4" doc="FLITF clock enable" /><CRCEN _="reg_bit" b="6" doc="CRC clock enable" /><AFIOEN _="reg_bit" b="32" doc="Alternate Function I/O clock enable" /><IOPAEN _="reg_bit" b="34" doc="I/O port A clock enable" /><IOPBEN _="reg_bit" b="35" doc="I/O port B clock enable" /><IOPCEN _="reg_bit" b="36" doc="I/O port C clock enable" /><IOPDEN _="reg_bit" b="37" doc="I/O port D clock enable" /><IOPEEN _="reg_bit" b="38" doc="I/O port E clock enable" /><ADC1EN _="reg_bit" b="41" doc="ADC 1 interface clock enable" /><TIM1EN _="reg_bit" b="43" doc="TIM1 Timer clock enable" /><SPI1EN _="reg_bit" b="44" doc="SPI 1 clock enable" /><USART1EN _="reg_bit" b="46" doc="USART1 clock enable" /><TIM15EN _="reg_bit" b="48" doc="TIM15 Timer clock enable" /><TIM16EN _="reg_bit" b="49" doc="TIM16 Timer clock enable" /><TIM17EN _="reg_bit" b="50" doc="TIM17 Timer clock enable" /><TIM2EN _="reg_bit" b="64" doc="Timer 2 clock enabled" /><TIM3EN _="reg_bit" b="65" doc="Timer 3 clock enable" /><TIM4EN _="reg_bit" b="66" doc="Timer 4 clock enable" /><TIM6EN _="reg_bit" b="68" doc="Timer 6 clock enable" /><TIM7EN _="reg_bit" b="69" doc="Timer 7 clock enable" /><WWDGEN _="reg_bit" b="75" doc="Window Watchdog clock enable" /><SPI2EN _="reg_bit" b="78" doc="SPI 2 clock enable" /><USART2EN _="reg_bit" b="81" doc="USART 2 clock enable" /><USART3EN _="reg_bit" b="82" doc="USART 3 clock enable" /><I2C1EN _="reg_bit" b="85" doc="I2C 1 clock enable" /><I2C2EN _="reg_bit" b="86" doc="I2C 2 clock enable" /><BKPEN _="reg_bit" b="91" doc="Backup interface clock enable" /><PWREN _="reg_bit" b="92" doc="Power interface clock enable" /><DACEN _="reg_bit" b="93" doc="DAC interface clock enable" /><CECEN _="reg_bit" b="94" doc="CEC interface clock enable" /></v></ENR><BDCR _="struct_field" doc="" l="4"><v _="nl"><LSEON _="reg_bit" b="0" doc="External Low Speed oscillator enable" /><LSERDY _="reg_bit" b="1" doc="External Low Speed oscillator Ready" /><LSEBYP _="reg_bit" b="2" doc="External Low Speed oscillator Bypass" /><RTCSEL _="reg_bit" b="8" doc="RTCSEL[1:0] bits (RTC clock source selection)" e="9" /><RTCEN _="reg_bit" b="15" doc="RTC clock enable" /><BDRST _="reg_bit" b="16" doc="Backup domain software reset" /></v></BDCR><CSR _="struct_field" doc="" l="4"><v _="nl"><LSION _="reg_bit" b="0" doc="Internal Low Speed oscillator enable" /><LSIRDY _="reg_bit" b="1" doc="Internal Low Speed oscillator Ready" /><RMVF _="reg_bit" b="24" doc="Remove reset flag" /><PINRSTF _="reg_bit" b="26" doc="PIN reset flag" /><PORRSTF _="reg_bit" b="27" doc="POR/PDR reset flag" /><SFTRSTF _="reg_bit" b="28" doc="Software Reset flag" /><IWDGRSTF _="reg_bit" b="29" doc="Independent Watchdog reset flag" /><WWDGRSTF _="reg_bit" b="30" doc="Window watchdog reset flag" /><LPWRRSTF _="reg_bit" b="31" doc="Low-Power reset flag" /></v></CSR><RESERVED0 _="struct_field" doc="" l="4"><v _="nl" /></RESERVED0><CFGR2 _="struct_field" doc="" l="4"><v _="nl"><PREDIV1 _="reg_bit" b="0" doc="PREDIV1[3:0] bits" e="3" /></v></CFGR2></t></RCC><RTC _="struct_descr" rn="RTC_TypeDef"><t _="nl"><CRH _="struct_field" doc="" l="4"><v _="nl"><SECIE _="reg_bit" b="0" doc="Second Interrupt Enable" /><ALRIE _="reg_bit" b="1" doc="Alarm Interrupt Enable" /><OWIE _="reg_bit" b="2" doc="OverfloW Interrupt Enable" /></v></CRH><CRL _="struct_field" doc="" l="4"><v _="nl"><SECF _="reg_bit" b="0" doc="Second Flag" /><ALRF _="reg_bit" b="1" doc="Alarm Flag" /><OWF _="reg_bit" b="2" doc="OverfloW Flag" /><RSF _="reg_bit" b="3" doc="Registers Synchronized Flag" /><CNF _="reg_bit" b="4" doc="Configuration Flag" /><RTOFF _="reg_bit" b="5" doc="RTC operation OFF" /></v></CRL><PRLH _="struct_field" doc="" l="4"><v _="nl"><PRL _="reg_bit" b="0" doc="RTC Prescaler Reload Value High" e="3" /></v></PRLH><PRLL _="struct_field" doc="" l="4"><v _="nl"><PRL _="reg_bit" b="0" doc="RTC Prescaler Reload Value Low" e="15" /></v></PRLL><DIVH _="struct_field" doc="" l="4"><v _="nl" /></DIVH><DIVL _="struct_field" doc="" l="4"><v _="nl" /></DIVL><CNTH _="struct_field" doc="" l="4"><v _="nl" /></CNTH><CNTL _="struct_field" doc="" l="4"><v _="nl" /></CNTL><ALRH _="struct_field" doc="" l="4"><v _="nl" /></ALRH><ALRL _="struct_field" doc="" l="4"><v _="nl" /></ALRL></t></RTC><SDIO _="struct_descr" rn="SDIO_TypeDef"><t _="nl"><POWER _="struct_field" doc="" l="4"><v _="nl"><PWRCTRL _="reg_bit" b="0" doc="PWRCTRL[1:0] bits (Power supply control bits)" e="1" /></v></POWER><CLKCR _="struct_field" doc="" l="4"><v _="nl"><CLKDIV _="reg_bit" b="0" doc="Clock divide factor" e="7" /><CLKEN _="reg_bit" b="8" doc="Clock enable bit" /><PWRSAV _="reg_bit" b="9" doc="Power saving configuration bit" /><BYPASS _="reg_bit" b="10" doc="Clock divider bypass enable bit" /><WIDBUS _="reg_bit" b="11" doc="WIDBUS[1:0] bits (Wide bus mode enable bit)" e="12" /><NEGEDGE _="reg_bit" b="13" doc="SDIO_CK dephasing selection bit" /></v></CLKCR><ARG _="struct_field" doc="" l="4"><v _="nl"><CMDARG _="reg_bit" b="0" doc="Command argument" e="31" /></v></ARG><CMD _="struct_field" doc="" l="4"><v _="nl"><CMDINDEX _="reg_bit" b="0" doc="Command Index" e="5" /><WAITRESP _="reg_bit" b="6" doc="WAITRESP[1:0] bits (Wait for response bits)" e="7" /><WAITINT _="reg_bit" b="8" doc="CPSM Waits for Interrupt Request" /><WAITPEND _="reg_bit" b="9" doc="CPSM Waits for ends of data transfer (CmdPend internal signal)" /><CPSMEN _="reg_bit" b="10" doc="Command path state machine (CPSM) Enable bit" /><SDIOSUSPEND _="reg_bit" b="11" doc="SD I/O suspend command" /><ENCMDCOMPL _="reg_bit" b="12" doc="Enable CMD completion" /><NIEN _="reg_bit" b="13" doc="Not Interrupt Enable" /><CEATACMD _="reg_bit" b="14" doc="CE-ATA command" /></v></CMD><RESPCMD _="struct_field" doc="" l="4"><v _="nl"><RESPCMD _="reg_bit" b="0" doc="Response command index" e="5" /></v></RESPCMD><RESP1 _="struct_field" doc="" l="4"><v _="nl"><CARDSTATUS1 _="reg_bit" b="0" doc="Card Status" e="31" /></v></RESP1><RESP2 _="struct_field" doc="" l="4"><v _="nl"><CARDSTATUS2 _="reg_bit" b="0" doc="Card Status" e="31" /></v></RESP2><RESP3 _="struct_field" doc="" l="4"><v _="nl"><CARDSTATUS3 _="reg_bit" b="0" doc="Card Status" e="31" /></v></RESP3><RESP4 _="struct_field" doc="" l="4"><v _="nl"><CARDSTATUS4 _="reg_bit" b="0" doc="Card Status" e="31" /></v></RESP4><DTIMER _="struct_field" doc="" l="4"><v _="nl"><DATATIME _="reg_bit" b="0" doc="Data timeout period." e="31" /></v></DTIMER><DLEN _="struct_field" doc="" l="4"><v _="nl"><DATALENGTH _="reg_bit" b="0" doc="Data length value" e="24" /></v></DLEN><DCTRL _="struct_field" doc="" l="4"><v _="nl"><DTEN _="reg_bit" b="0" doc="Data transfer enabled bit" /><DTDIR _="reg_bit" b="1" doc="Data transfer direction selection" /><DTMODE _="reg_bit" b="2" doc="Data transfer mode selection" /><DMAEN _="reg_bit" b="3" doc="DMA enabled bit" /><DBLOCKSIZE _="reg_bit" b="4" doc="DBLOCKSIZE[3:0] bits (Data block size)" e="7" /><RWSTART _="reg_bit" b="8" doc="Read wait start" /><RWSTOP _="reg_bit" b="9" doc="Read wait stop" /><RWMOD _="reg_bit" b="10" doc="Read wait mode" /><SDIOEN _="reg_bit" b="11" doc="SD I/O enable functions" /></v></DCTRL><DCOUNT _="struct_field" doc="" l="4"><v _="nl"><DATACOUNT _="reg_bit" b="0" doc="Data count value" e="24" /></v></DCOUNT><STA _="struct_field" doc="" l="4"><v _="nl"><CCRCFAIL _="reg_bit" b="0" doc="Command response received (CRC check failed)" /><DCRCFAIL _="reg_bit" b="1" doc="Data block sent/received (CRC check failed)" /><CTIMEOUT _="reg_bit" b="2" doc="Command response timeout" /><DTIMEOUT _="reg_bit" b="3" doc="Data timeout" /><TXUNDERR _="reg_bit" b="4" doc="Transmit FIFO underrun error" /><RXOVERR _="reg_bit" b="5" doc="Received FIFO overrun error" /><CMDREND _="reg_bit" b="6" doc="Command response received (CRC check passed)" /><CMDSENT _="reg_bit" b="7" doc="Command sent (no response required)" /><DATAEND _="reg_bit" b="8" doc="Data end (data counter, SDIDCOUNT, is zero)" /><STBITERR _="reg_bit" b="9" doc="Start bit not detected on all data signals in wide bus mode" /><DBCKEND _="reg_bit" b="10" doc="Data block sent/received (CRC check passed)" /><CMDACT _="reg_bit" b="11" doc="Command transfer in progress" /><TXACT _="reg_bit" b="12" doc="Data transmit in progress" /><RXACT _="reg_bit" b="13" doc="Data receive in progress" /><TXFIFOHE _="reg_bit" b="14" doc="Transmit FIFO Half Empty: at least 8 words can be written into the FIFO" /><RXFIFOHF _="reg_bit" b="15" doc="Receive FIFO Half Full: there are at least 8 words in the FIFO" /><TXFIFOF _="reg_bit" b="16" doc="Transmit FIFO full" /><RXFIFOF _="reg_bit" b="17" doc="Receive FIFO full" /><TXFIFOE _="reg_bit" b="18" doc="Transmit FIFO empty" /><RXFIFOE _="reg_bit" b="19" doc="Receive FIFO empty" /><TXDAVL _="reg_bit" b="20" doc="Data available in transmit FIFO" /><RXDAVL _="reg_bit" b="21" doc="Data available in receive FIFO" /><SDIOIT _="reg_bit" b="22" doc="SDIO interrupt received" /><CEATAEND _="reg_bit" b="23" doc="CE-ATA command completion signal received for CMD61" /></v></STA><ICR _="struct_field" doc="" l="4"><v _="nl"><CCRCFAILC _="reg_bit" b="0" doc="CCRCFAIL flag clear bit" /><DCRCFAILC _="reg_bit" b="1" doc="DCRCFAIL flag clear bit" /><CTIMEOUTC _="reg_bit" b="2" doc="CTIMEOUT flag clear bit" /><DTIMEOUTC _="reg_bit" b="3" doc="DTIMEOUT flag clear bit" /><TXUNDERRC _="reg_bit" b="4" doc="TXUNDERR flag clear bit" /><RXOVERRC _="reg_bit" b="5" doc="RXOVERR flag clear bit" /><CMDRENDC _="reg_bit" b="6" doc="CMDREND flag clear bit" /><CMDSENTC _="reg_bit" b="7" doc="CMDSENT flag clear bit" /><DATAENDC _="reg_bit" b="8" doc="DATAEND flag clear bit" /><STBITERRC _="reg_bit" b="9" doc="STBITERR flag clear bit" /><DBCKENDC _="reg_bit" b="10" doc="DBCKEND flag clear bit" /><SDIOITC _="reg_bit" b="22" doc="SDIOIT flag clear bit" /><CEATAENDC _="reg_bit" b="23" doc="CEATAEND flag clear bit" /></v></ICR><MASK _="struct_field" doc="" l="4"><v _="nl"><CCRCFAILIE _="reg_bit" b="0" doc="Command CRC Fail Interrupt Enable" /><DCRCFAILIE _="reg_bit" b="1" doc="Data CRC Fail Interrupt Enable" /><CTIMEOUTIE _="reg_bit" b="2" doc="Command TimeOut Interrupt Enable" /><DTIMEOUTIE _="reg_bit" b="3" doc="Data TimeOut Interrupt Enable" /><TXUNDERRIE _="reg_bit" b="4" doc="Tx FIFO UnderRun Error Interrupt Enable" /><RXOVERRIE _="reg_bit" b="5" doc="Rx FIFO OverRun Error Interrupt Enable" /><CMDRENDIE _="reg_bit" b="6" doc="Command Response Received Interrupt Enable" /><CMDSENTIE _="reg_bit" b="7" doc="Command Sent Interrupt Enable" /><DATAENDIE _="reg_bit" b="8" doc="Data End Interrupt Enable" /><STBITERRIE _="reg_bit" b="9" doc="Start Bit Error Interrupt Enable" /><DBCKENDIE _="reg_bit" b="10" doc="Data Block End Interrupt Enable" /><CMDACTIE _="reg_bit" b="11" doc="Command Acting Interrupt Enable" /><TXACTIE _="reg_bit" b="12" doc="Data Transmit Acting Interrupt Enable" /><RXACTIE _="reg_bit" b="13" doc="Data receive acting interrupt enabled" /><TXFIFOHEIE _="reg_bit" b="14" doc="Tx FIFO Half Empty interrupt Enable" /><RXFIFOHFIE _="reg_bit" b="15" doc="Rx FIFO Half Full interrupt Enable" /><TXFIFOFIE _="reg_bit" b="16" doc="Tx FIFO Full interrupt Enable" /><RXFIFOFIE _="reg_bit" b="17" doc="Rx FIFO Full interrupt Enable" /><TXFIFOEIE _="reg_bit" b="18" doc="Tx FIFO Empty interrupt Enable" /><RXFIFOEIE _="reg_bit" b="19" doc="Rx FIFO Empty interrupt Enable" /><TXDAVLIE _="reg_bit" b="20" doc="Data available in Tx FIFO interrupt Enable" /><RXDAVLIE _="reg_bit" b="21" doc="Data available in Rx FIFO interrupt Enable" /><SDIOITIE _="reg_bit" b="22" doc="SDIO Mode Interrupt Received interrupt Enable" /><CEATAENDIE _="reg_bit" b="23" doc="CE-ATA command completion signal received Interrupt Enable" /></v></MASK><RESERVED0 _="struct_field" doc="" l="4" ne="2"><v _="nl" /></RESERVED0><FIFOCNT _="struct_field" doc="" l="4"><v _="nl"><FIFOCOUNT _="reg_bit" b="0" doc="Remaining number of words to be written to or read from the FIFO" e="23" /></v></FIFOCNT><RESERVED1 _="struct_field" doc="" l="4" ne="13"><v _="nl" /></RESERVED1><FIFO _="struct_field" doc="" l="4"><v _="nl"><FIFODATA _="reg_bit" b="0" doc="Receive and transmit FIFO data" e="31" /></v></FIFO></t></SDIO><SPI _="struct_descr" rn="SPI_TypeDef"><t _="nl"><CR1 _="struct_field" doc="" l="4"><v _="nl"><CPHA _="reg_bit" b="0" doc="Clock Phase" /><CPOL _="reg_bit" b="1" doc="Clock Polarity" /><MSTR _="reg_bit" b="2" doc="Master Selection" /><BR _="reg_bit" b="3" doc="BR[2:0] bits (Baud Rate Control)" e="5" /><SPE _="reg_bit" b="6" doc="SPI Enable" /><LSBFIRST _="reg_bit" b="7" doc="Frame Format" /><SSI _="reg_bit" b="8" doc="Internal slave select" /><SSM _="reg_bit" b="9" doc="Software slave management" /><RXONLY _="reg_bit" b="10" doc="Receive only" /><DFF _="reg_bit" b="11" doc="Data Frame Format" /><CRCNEXT _="reg_bit" b="12" doc="Transmit CRC next" /><CRCEN _="reg_bit" b="13" doc="Hardware CRC calculation enable" /><BIDIOE _="reg_bit" b="14" doc="Output enable in bidirectional mode" /><BIDIMODE _="reg_bit" b="15" doc="Bidirectional data mode enable" /></v></CR1><CR2 _="struct_field" doc="" l="4"><v _="nl"><RXDMAEN _="reg_bit" b="0" doc="Rx Buffer DMA Enable" /><TXDMAEN _="reg_bit" b="1" doc="Tx Buffer DMA Enable" /><SSOE _="reg_bit" b="2" doc="SS Output Enable" /><ERRIE _="reg_bit" b="5" doc="Error Interrupt Enable" /><RXNEIE _="reg_bit" b="6" doc="RX buffer Not Empty Interrupt Enable" /><TXEIE _="reg_bit" b="7" doc="Tx buffer Empty Interrupt Enable" /></v></CR2><SR _="struct_field" doc="" l="4"><v _="nl"><RXNE _="reg_bit" b="0" doc="Receive buffer Not Empty" /><TXE _="reg_bit" b="1" doc="Transmit buffer Empty" /><CHSIDE _="reg_bit" b="2" doc="Channel side" /><UDR _="reg_bit" b="3" doc="Underrun flag" /><CRCERR _="reg_bit" b="4" doc="CRC Error flag" /><MODF _="reg_bit" b="5" doc="Mode fault" /><OVR _="reg_bit" b="6" doc="Overrun flag" /><BSY _="reg_bit" b="7" doc="Busy flag" /></v></SR><DR _="struct_field" doc="" l="4"><v _="nl"><DR _="reg_bit" b="0" doc="Data Register" e="15" /></v></DR><CRCPR _="struct_field" doc="" l="4"><v _="nl"><CRCPOLY _="reg_bit" b="0" doc="CRC polynomial register" e="15" /></v></CRCPR><RXCRCR _="struct_field" doc="" l="4"><v _="nl"><RXCRC _="reg_bit" b="0" doc="Rx CRC Register" e="15" /></v></RXCRCR><TXCRCR _="struct_field" doc="" l="4"><v _="nl"><TXCRC _="reg_bit" b="0" doc="Tx CRC Register" e="15" /></v></TXCRCR></t></SPI><TIM _="struct_descr" rn="TIM_TypeDef"><t _="nl"><CR1 _="struct_field" doc="TIM control register 1, Address offset: 0x00" l="4"><v _="nl"><CEN _="reg_bit" b="0" doc="Counter enable" /><UDIS _="reg_bit" b="1" doc="Update disable" /><URS _="reg_bit" b="2" doc="Update request source" /><OPM _="reg_bit" b="3" doc="One pulse mode" /><DIR _="reg_bit" b="4" doc="Direction" /><CMS _="reg_bit" b="5" doc="CMS[1:0] bits (Center-aligned mode selection)" e="6" /><ARPE _="reg_bit" b="7" doc="Auto-reload preload enable" /><CKD _="reg_bit" b="8" doc="CKD[1:0] bits (clock division)" e="9" /></v></CR1><CR2 _="struct_field" doc="TIM control register 2, Address offset: 0x04" l="4"><v _="nl"><CCPC _="reg_bit" b="0" doc="Capture/Compare Preloaded Control" /><CCUS _="reg_bit" b="2" doc="Capture/Compare Control Update Selection" /><CCDS _="reg_bit" b="3" doc="Capture/Compare DMA Selection" /><MMS _="reg_bit" b="4" doc="MMS[2:0] bits (Master Mode Selection)" e="6" /><TI1S _="reg_bit" b="7" doc="TI1 Selection" /><OIS1 _="reg_bit" b="8" doc="Output Idle state 1 (OC1 output)" /><OIS1N _="reg_bit" b="9" doc="Output Idle state 1 (OC1N output)" /><OIS2 _="reg_bit" b="10" doc="Output Idle state 2 (OC2 output)" /><OIS2N _="reg_bit" b="11" doc="Output Idle state 2 (OC2N output)" /><OIS3 _="reg_bit" b="12" doc="Output Idle state 3 (OC3 output)" /><OIS3N _="reg_bit" b="13" doc="Output Idle state 3 (OC3N output)" /><OIS4 _="reg_bit" b="14" doc="Output Idle state 4 (OC4 output)" /></v></CR2><SMCR _="struct_field" doc="TIM slave Mode Control register,  Address offset: 0x08" l="4"><v _="nl"><SMS _="reg_bit" b="0" doc="SMS[2:0] bits (Slave mode selection)" e="2" /><OCCS _="reg_bit" b="3" doc="OCREF clear selection" /><TS _="reg_bit" b="4" doc="TS[2:0] bits (Trigger selection)" e="6" /><MSM _="reg_bit" b="7" doc="Master/slave mode" /><ETF _="reg_bit" b="8" doc="ETF[3:0] bits (External trigger filter)" e="11" /><ETPS _="reg_bit" b="12" doc="ETPS[1:0] bits (External trigger prescaler)" e="13" /><ECE _="reg_bit" b="14" doc="External clock enable" /><ETP _="reg_bit" b="15" doc="External trigger polarity" /></v></SMCR><DIER _="struct_field" doc="TIM DMA/interrupt enable register,  Address offset: 0x0C" l="4"><v _="nl"><UIE _="reg_bit" b="0" doc="Update interrupt enable" /><CC1IE _="reg_bit" b="1" doc="Capture/Compare 1 interrupt enable" /><CC2IE _="reg_bit" b="2" doc="Capture/Compare 2 interrupt enable" /><CC3IE _="reg_bit" b="3" doc="Capture/Compare 3 interrupt enable" /><CC4IE _="reg_bit" b="4" doc="Capture/Compare 4 interrupt enable" /><COMIE _="reg_bit" b="5" doc="COM interrupt enable" /><TIE _="reg_bit" b="6" doc="Trigger interrupt enable" /><BIE _="reg_bit" b="7" doc="Break interrupt enable" /><UDE _="reg_bit" b="8" doc="Update DMA request enable" /><CC1DE _="reg_bit" b="9" doc="Capture/Compare 1 DMA request enable" /><CC2DE _="reg_bit" b="10" doc="Capture/Compare 2 DMA request enable" /><CC3DE _="reg_bit" b="11" doc="Capture/Compare 3 DMA request enable" /><CC4DE _="reg_bit" b="12" doc="Capture/Compare 4 DMA request enable" /><COMDE _="reg_bit" b="13" doc="COM DMA request enable" /><TDE _="reg_bit" b="14" doc="Trigger DMA request enable" /></v></DIER><SR _="struct_field" doc="TIM status register,  Address offset: 0x10" l="4"><v _="nl"><UIF _="reg_bit" b="0" doc="Update interrupt Flag" /><CC1IF _="reg_bit" b="1" doc="Capture/Compare 1 interrupt Flag" /><CC2IF _="reg_bit" b="2" doc="Capture/Compare 2 interrupt Flag" /><CC3IF _="reg_bit" b="3" doc="Capture/Compare 3 interrupt Flag" /><CC4IF _="reg_bit" b="4" doc="Capture/Compare 4 interrupt Flag" /><COMIF _="reg_bit" b="5" doc="COM interrupt Flag" /><TIF _="reg_bit" b="6" doc="Trigger interrupt Flag" /><BIF _="reg_bit" b="7" doc="Break interrupt Flag" /><CC1OF _="reg_bit" b="9" doc="Capture/Compare 1 Overcapture Flag" /><CC2OF _="reg_bit" b="10" doc="Capture/Compare 2 Overcapture Flag" /><CC3OF _="reg_bit" b="11" doc="Capture/Compare 3 Overcapture Flag" /><CC4OF _="reg_bit" b="12" doc="Capture/Compare 4 Overcapture Flag" /></v></SR><EGR _="struct_field" doc="TIM event generation register,  Address offset: 0x14" l="4"><v _="nl"><UG _="reg_bit" b="0" doc="Update Generation" /><CC1G _="reg_bit" b="1" doc="Capture/Compare 1 Generation" /><CC2G _="reg_bit" b="2" doc="Capture/Compare 2 Generation" /><CC3G _="reg_bit" b="3" doc="Capture/Compare 3 Generation" /><CC4G _="reg_bit" b="4" doc="Capture/Compare 4 Generation" /><COMG _="reg_bit" b="5" doc="Capture/Compare Control Update Generation" /><TG _="reg_bit" b="6" doc="Trigger Generation" /><BG _="reg_bit" b="7" doc="Break Generation" /></v></EGR><CCMR1 _="struct_field" doc="capture/compare mode register 1, Address offset: 0x18" l="4"><v _="nl"><CC1S _="reg_bit" b="0" doc="CC1S[1:0] bits (Capture/Compare 1 Selection)" e="1" /><OC1FE _="reg_bit" b="2" doc="Output Compare 1 Fast enable" /><IC1PSC _="reg_bit" b="2" doc="IC1PSC[1:0] bits (Input Capture 1 Prescaler)" e="3" /><OC1PE _="reg_bit" b="3" doc="Output Compare 1 Preload enable" /><OC1M _="reg_bit" b="4" doc="OC1M[2:0] bits (Output Compare 1 Mode)" e="6" /><IC1F _="reg_bit" b="4" doc="IC1F[3:0] bits (Input Capture 1 Filter)" e="7" /><OC1CE _="reg_bit" b="7" doc="Output Compare 1Clear Enable" /><CC2S _="reg_bit" b="8" doc="CC2S[1:0] bits (Capture/Compare 2 Selection)" e="9" /><OC2FE _="reg_bit" b="10" doc="Output Compare 2 Fast enable" /><IC2PSC _="reg_bit" b="10" doc="IC2PSC[1:0] bits (Input Capture 2 Prescaler)" e="11" /><OC2PE _="reg_bit" b="11" doc="Output Compare 2 Preload enable" /><OC2M _="reg_bit" b="12" doc="OC2M[2:0] bits (Output Compare 2 Mode)" e="14" /><IC2F _="reg_bit" b="12" doc="IC2F[3:0] bits (Input Capture 2 Filter)" e="15" /><OC2CE _="reg_bit" b="15" doc="Output Compare 2 Clear Enable" /></v></CCMR1><CCMR2 _="struct_field" doc="capture/compare mode register 2, Address offset: 0x1C" l="4"><v _="nl"><CC3S _="reg_bit" b="0" doc="CC3S[1:0] bits (Capture/Compare 3 Selection)" e="1" /><OC3FE _="reg_bit" b="2" doc="Output Compare 3 Fast enable" /><IC3PSC _="reg_bit" b="2" doc="IC3PSC[1:0] bits (Input Capture 3 Prescaler)" e="3" /><OC3PE _="reg_bit" b="3" doc="Output Compare 3 Preload enable" /><OC3M _="reg_bit" b="4" doc="OC3M[2:0] bits (Output Compare 3 Mode)" e="6" /><IC3F _="reg_bit" b="4" doc="IC3F[3:0] bits (Input Capture 3 Filter)" e="7" /><OC3CE _="reg_bit" b="7" doc="Output Compare 3 Clear Enable" /><CC4S _="reg_bit" b="8" doc="CC4S[1:0] bits (Capture/Compare 4 Selection)" e="9" /><OC4FE _="reg_bit" b="10" doc="Output Compare 4 Fast enable" /><IC4PSC _="reg_bit" b="10" doc="IC4PSC[1:0] bits (Input Capture 4 Prescaler)" e="11" /><OC4PE _="reg_bit" b="11" doc="Output Compare 4 Preload enable" /><OC4M _="reg_bit" b="12" doc="OC4M[2:0] bits (Output Compare 4 Mode)" e="14" /><IC4F _="reg_bit" b="12" doc="IC4F[3:0] bits (Input Capture 4 Filter)" e="15" /><OC4CE _="reg_bit" b="15" doc="Output Compare 4 Clear Enable" /></v></CCMR2><CCER _="struct_field" doc="TIM capture/compare enable register,  Address offset: 0x20" l="4"><v _="nl"><CC1E _="reg_bit" b="0" doc="Capture/Compare 1 output enable" /><CC1P _="reg_bit" b="1" doc="Capture/Compare 1 output Polarity" /><CC1NE _="reg_bit" b="2" doc="Capture/Compare 1 Complementary output enable" /><CC1NP _="reg_bit" b="3" doc="Capture/Compare 1 Complementary output Polarity" /><CC2E _="reg_bit" b="4" doc="Capture/Compare 2 output enable" /><CC2P _="reg_bit" b="5" doc="Capture/Compare 2 output Polarity" /><CC2NE _="reg_bit" b="6" doc="Capture/Compare 2 Complementary output enable" /><CC2NP _="reg_bit" b="7" doc="Capture/Compare 2 Complementary output Polarity" /><CC3E _="reg_bit" b="8" doc="Capture/Compare 3 output enable" /><CC3P _="reg_bit" b="9" doc="Capture/Compare 3 output Polarity" /><CC3NE _="reg_bit" b="10" doc="Capture/Compare 3 Complementary output enable" /><CC3NP _="reg_bit" b="11" doc="Capture/Compare 3 Complementary output Polarity" /><CC4E _="reg_bit" b="12" doc="Capture/Compare 4 output enable" /><CC4P _="reg_bit" b="13" doc="Capture/Compare 4 output Polarity" /><CC4NP _="reg_bit" b="15" doc="Capture/Compare 4 Complementary output Polarity" /></v></CCER><CNT _="struct_field" doc="TIM counter register, Address offset: 0x24" l="4"><v _="nl"><CNT _="reg_bit" b="0" doc="Counter Value" e="31" /></v></CNT><PSC _="struct_field" doc="TIM prescaler register, Address offset: 0x28" l="4"><v _="nl"><PSC _="reg_bit" b="0" doc="Prescaler Value" e="15" /></v></PSC><ARR _="struct_field" doc="TIM auto-reload register, Address offset: 0x2C" l="4"><v _="nl"><ARR _="reg_bit" b="0" doc="actual auto-reload Value" e="31" /></v></ARR><RCR _="struct_field" doc="repetition counter register, Address offset: 0x30" l="4"><v _="nl"><REP _="reg_bit" b="0" doc="Repetition Counter Value" e="7" /></v></RCR><CCR1 _="struct_field" doc="TIM capture/compare register 1, Address offset: 0x34" l="4"><v _="nl"><CCR1 _="reg_bit" b="0" doc="Capture/Compare 1 Value" e="15" /></v></CCR1><CCR2 _="struct_field" doc="TIM capture/compare register 2, Address offset: 0x38" l="4"><v _="nl"><CCR2 _="reg_bit" b="0" doc="Capture/Compare 2 Value" e="15" /></v></CCR2><CCR3 _="struct_field" doc="TIM capture/compare register 3, Address offset: 0x3C" l="4"><v _="nl"><CCR3 _="reg_bit" b="0" doc="Capture/Compare 3 Value" e="15" /></v></CCR3><CCR4 _="struct_field" doc="TIM capture/compare register 4, Address offset: 0x40" l="4"><v _="nl"><CCR4 _="reg_bit" b="0" doc="Capture/Compare 4 Value" e="15" /></v></CCR4><BDTR _="struct_field" doc="TIM break and dead-time register, Address offset: 0x44" l="4"><v _="nl"><DTG _="reg_bit" b="0" doc="DTG[0:7] bits (Dead-Time Generator set-up)" e="7" /><LOCK _="reg_bit" b="8" doc="LOCK[1:0] bits (Lock Configuration)" e="9" /><OSSI _="reg_bit" b="10" doc="Off-State Selection for Idle mode" /><OSSR _="reg_bit" b="11" doc="Off-State Selection for Run mode" /><BKE _="reg_bit" b="12" doc="Break enable" /><BKP _="reg_bit" b="13" doc="Break Polarity" /><AOE _="reg_bit" b="14" doc="Automatic Output enable" /><MOE _="reg_bit" b="15" doc="Main Output enable" /></v></BDTR><DCR _="struct_field" doc="TIM DMA control register, Address offset: 0x48" l="4"><v _="nl"><DBA _="reg_bit" b="0" doc="DBA[4:0] bits (DMA Base Address)" e="4" /><DBL _="reg_bit" b="8" doc="DBL[4:0] bits (DMA Burst Length)" e="12" /></v></DCR><DMAR _="struct_field" doc="TIM DMA address for full transfer register, Address offset: 0x4C" l="4"><v _="nl"><DMAB _="reg_bit" b="0" doc="DMA register for burst accesses" e="15" /></v></DMAR><OR _="struct_field" doc="TIM option register,  Address offset: 0x50" l="4"><v _="nl" /></OR></t></TIM><USART _="struct_descr" rn="USART_TypeDef"><t _="nl"><SR _="struct_field" doc="USART Status register,  Address offset: 0x00" l="4"><v _="nl"><PE _="reg_bit" b="0" doc="Parity Error" /><FE _="reg_bit" b="1" doc="Framing Error" /><NE _="reg_bit" b="2" doc="Noise Error Flag" /><ORE _="reg_bit" b="3" doc="OverRun Error" /><IDLE _="reg_bit" b="4" doc="IDLE line detected" /><RXNE _="reg_bit" b="5" doc="Read Data Register Not Empty" /><TC _="reg_bit" b="6" doc="Transmission Complete" /><TXE _="reg_bit" b="7" doc="Transmit Data Register Empty" /><LBD _="reg_bit" b="8" doc="LIN Break Detection Flag" /><CTS _="reg_bit" b="9" doc="CTS Flag" /></v></SR><DR _="struct_field" doc="USART Data register,  Address offset: 0x04" l="4"><v _="nl"><DR _="reg_bit" b="0" doc="Data value" e="8" /></v></DR><BRR _="struct_field" doc="USART Baud rate register, Address offset: 0x08" l="4"><v _="nl" /></BRR><CR1 _="struct_field" doc="USART Control register 1, Address offset: 0x0C" l="4"><v _="nl"><SBK _="reg_bit" b="0" doc="Send Break" /><RWU _="reg_bit" b="1" doc="Receiver wakeup" /><RE _="reg_bit" b="2" doc="Receiver Enable" /><TE _="reg_bit" b="3" doc="Transmitter Enable" /><IDLEIE _="reg_bit" b="4" doc="IDLE Interrupt Enable" /><RXNEIE _="reg_bit" b="5" doc="RXNE Interrupt Enable" /><TCIE _="reg_bit" b="6" doc="Transmission Complete Interrupt Enable" /><TXEIE _="reg_bit" b="7" doc="PE Interrupt Enable" /><PEIE _="reg_bit" b="8" doc="PE Interrupt Enable" /><PS _="reg_bit" b="9" doc="Parity Selection" /><PCE _="reg_bit" b="10" doc="Parity Control Enable" /><WAKE _="reg_bit" b="11" doc="Wakeup method" /><M _="reg_bit" b="12" doc="Word length" /><UE _="reg_bit" b="13" doc="USART Enable" /></v></CR1><CR2 _="struct_field" doc="USART Control register 2, Address offset: 0x10" l="4"><v _="nl"><ADD _="reg_bit" b="0" doc="Address of the USART node" e="3" /><LBDL _="reg_bit" b="5" doc="LIN Break Detection Length" /><LBDIE _="reg_bit" b="6" doc="LIN Break Detection Interrupt Enable" /><LBCL _="reg_bit" b="8" doc="Last Bit Clock pulse" /><CPHA _="reg_bit" b="9" doc="Clock Phase" /><CPOL _="reg_bit" b="10" doc="Clock Polarity" /><CLKEN _="reg_bit" b="11" doc="Clock Enable" /><STOP _="reg_bit" b="12" doc="STOP[1:0] bits (STOP bits)" e="13" /><LINEN _="reg_bit" b="14" doc="LIN mode enable" /></v></CR2><CR3 _="struct_field" doc="USART Control register 3, Address offset: 0x14" l="4"><v _="nl"><EIE _="reg_bit" b="0" doc="Error Interrupt Enable" /><IREN _="reg_bit" b="1" doc="IrDA mode Enable" /><IRLP _="reg_bit" b="2" doc="IrDA Low-Power" /><HDSEL _="reg_bit" b="3" doc="Half-Duplex Selection" /><NACK _="reg_bit" b="4" doc="Smartcard NACK enable" /><SCEN _="reg_bit" b="5" doc="Smartcard mode enable" /><DMAR _="reg_bit" b="6" doc="DMA Enable Receiver" /><DMAT _="reg_bit" b="7" doc="DMA Enable Transmitter" /><RTSE _="reg_bit" b="8" doc="RTS Enable" /><CTSE _="reg_bit" b="9" doc="CTS Enable" /><CTSIE _="reg_bit" b="10" doc="CTS Interrupt Enable" /></v></CR3><GTPR _="struct_field" doc="USART Guard time and prescaler register, Address offset: 0x18" l="4"><v _="nl"><PSC _="reg_bit" b="0" doc="PSC[7:0] bits (Prescaler value)" e="7" /><GT _="reg_bit" b="8" doc="Guard time value" e="15" /></v></GTPR></t></USART><WWDG _="struct_descr" rn="WWDG_TypeDef"><t _="nl"><CR _="struct_field" doc="WWDG Control register,  Address offset: 0x00" l="4"><v _="nl"><T _="reg_bit" b="0" doc="T[6:0] bits (7-Bit counter (MSB to LSB))" e="6" /><T0 _="reg_bit" b="0" doc="Bit 0" /><T1 _="reg_bit" b="1" doc="Bit 1" /><T2 _="reg_bit" b="2" doc="Bit 2" /><T3 _="reg_bit" b="3" doc="Bit 3" /><T4 _="reg_bit" b="4" doc="Bit 4" /><T5 _="reg_bit" b="5" doc="Bit 5" /><T6 _="reg_bit" b="6" doc="Bit 6" /><WDGA _="reg_bit" b="7" doc="Activation bit" /></v></CR><CFR _="struct_field" doc="WWDG Configuration register, Address offset: 0x04" l="4"><v _="nl"><W _="reg_bit" b="0" doc="W[6:0] bits (7-bit window value)" e="6" /><W0 _="reg_bit" b="0" doc="Bit 0" /><W1 _="reg_bit" b="1" doc="Bit 1" /><W2 _="reg_bit" b="2" doc="Bit 2" /><W3 _="reg_bit" b="3" doc="Bit 3" /><W4 _="reg_bit" b="4" doc="Bit 4" /><W5 _="reg_bit" b="5" doc="Bit 5" /><W6 _="reg_bit" b="6" doc="Bit 6" /><WDGTB _="reg_bit" b="7" doc="WDGTB[1:0] bits (Timer Base)" e="8" /><WDGTB0 _="reg_bit" b="7" doc="Bit 0" /><WDGTB1 _="reg_bit" b="8" doc="Bit 1" /><EWI _="reg_bit" b="9" doc="Early Wakeup Interrupt" /></v></CFR><SR _="struct_field" doc="WWDG Status register, Address offset: 0x08" l="4"><v _="nl"><EWIF _="reg_bit" b="0" doc="Early Wakeup Interrupt Flag" /></v></SR></t></WWDG></types><vars _="dict" /></proc>